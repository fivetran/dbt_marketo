{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-03-20T21:27:48.455384Z", "invocation_id": "baf383f6-7f11-4df2-8d32-377e8e12e4f6", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:43.951161Z", "completed_at": "2024-03-20T21:27:43.972761Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:43.976746Z", "completed_at": "2024-03-20T21:27:43.976754Z"}], "thread_id": "Thread-2", "execution_time": 0.04470109939575195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_change_data_value_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_activity_change_data_value_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_change_data_value_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:43.956188Z", "completed_at": "2024-03-20T21:27:43.973158Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:43.977308Z", "completed_at": "2024-03-20T21:27:43.977313Z"}], "thread_id": "Thread-4", "execution_time": 0.04511284828186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_delete_lead_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_activity_delete_lead_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_delete_lead_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:43.953867Z", "completed_at": "2024-03-20T21:27:43.973554Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:43.978122Z", "completed_at": "2024-03-20T21:27:43.978126Z"}], "thread_id": "Thread-3", "execution_time": 0.053092002868652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_click_email_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_activity_click_email_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_click_email_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:43.959090Z", "completed_at": "2024-03-20T21:27:43.974151Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:43.978404Z", "completed_at": "2024-03-20T21:27:43.978408Z"}], "thread_id": "Thread-5", "execution_time": 0.05582070350646973, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_email_bounced_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_activity_email_bounced_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_bounced_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:43.961502Z", "completed_at": "2024-03-20T21:27:43.974919Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:43.979737Z", "completed_at": "2024-03-20T21:27:43.979743Z"}], "thread_id": "Thread-6", "execution_time": 0.0591731071472168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_email_delivered_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_activity_email_delivered_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_delivered_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:43.968149Z", "completed_at": "2024-03-20T21:27:43.975458Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:43.980785Z", "completed_at": "2024-03-20T21:27:43.980794Z"}], "thread_id": "Thread-8", "execution_time": 0.06520318984985352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_open_email_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_activity_open_email_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_open_email_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:43.965414Z", "completed_at": "2024-03-20T21:27:43.975747Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:43.982179Z", "completed_at": "2024-03-20T21:27:43.982192Z"}], "thread_id": "Thread-7", "execution_time": 0.07408571243286133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_merge_leads_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_activity_merge_leads_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_merge_leads_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.038241Z", "completed_at": "2024-03-20T21:27:44.064753Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.089545Z", "completed_at": "2024-03-20T21:27:44.089554Z"}], "thread_id": "Thread-2", "execution_time": 0.08222007751464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_send_email_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_activity_send_email_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_send_email_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.086964Z", "completed_at": "2024-03-20T21:27:44.088676Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.097836Z", "completed_at": "2024-03-20T21:27:44.097845Z"}], "thread_id": "Thread-7", "execution_time": 0.04835820198059082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_change_data_value_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.058329Z", "completed_at": "2024-03-20T21:27:44.089159Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.098613Z", "completed_at": "2024-03-20T21:27:44.098638Z"}], "thread_id": "Thread-6", "execution_time": 0.05527806282043457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__lead_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_lead_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.071113Z", "completed_at": "2024-03-20T21:27:44.089874Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.099774Z", "completed_at": "2024-03-20T21:27:44.099779Z"}], "thread_id": "Thread-4", "execution_time": 0.08448314666748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_unsubscribe_email_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_activity_unsubscribe_email_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_unsubscribe_email_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.081353Z", "completed_at": "2024-03-20T21:27:44.094516Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.101355Z", "completed_at": "2024-03-20T21:27:44.101361Z"}], "thread_id": "Thread-5", "execution_time": 0.07580995559692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__lead_describe_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_lead_describe_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead_describe_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.084312Z", "completed_at": "2024-03-20T21:27:44.097195Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.103722Z", "completed_at": "2024-03-20T21:27:44.103727Z"}], "thread_id": "Thread-3", "execution_time": 0.0818479061126709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__email_template_history_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"marketo_integration_tests_56\".\"marketo_email_template_history_data\"", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__email_template_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.090160Z", "completed_at": "2024-03-20T21:27:44.099027Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.107133Z", "completed_at": "2024-03-20T21:27:44.107139Z"}], "thread_id": "Thread-8", "execution_time": 0.06283283233642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.marketo.marketo-on-run-start-0", "compiled": true, "compiled_code": "\n\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.112531Z", "completed_at": "2024-03-20T21:27:44.114043Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.122549Z", "completed_at": "2024-03-20T21:27:44.122557Z"}], "thread_id": "Thread-2", "execution_time": 0.02434396743774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_click_email_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.117451Z", "completed_at": "2024-03-20T21:27:44.119624Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.129248Z", "completed_at": "2024-03-20T21:27:44.129253Z"}], "thread_id": "Thread-7", "execution_time": 0.022207975387573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_delete_lead_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.120368Z", "completed_at": "2024-03-20T21:27:44.121583Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.129760Z", "completed_at": "2024-03-20T21:27:44.129763Z"}], "thread_id": "Thread-6", "execution_time": 0.022355079650878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_email_bounced_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.122853Z", "completed_at": "2024-03-20T21:27:44.123987Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.131852Z", "completed_at": "2024-03-20T21:27:44.131857Z"}], "thread_id": "Thread-4", "execution_time": 0.02064800262451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_email_delivered_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.124755Z", "completed_at": "2024-03-20T21:27:44.125786Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.133255Z", "completed_at": "2024-03-20T21:27:44.133262Z"}], "thread_id": "Thread-5", "execution_time": 0.020966768264770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_merge_leads_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.127569Z", "completed_at": "2024-03-20T21:27:44.128860Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.135723Z", "completed_at": "2024-03-20T21:27:44.135728Z"}], "thread_id": "Thread-3", "execution_time": 0.021101951599121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_open_email_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.130079Z", "completed_at": "2024-03-20T21:27:44.131154Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.137200Z", "completed_at": "2024-03-20T21:27:44.137203Z"}], "thread_id": "Thread-8", "execution_time": 0.017632007598876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_send_email_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.139961Z", "completed_at": "2024-03-20T21:27:44.142011Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.149871Z", "completed_at": "2024-03-20T21:27:44.149878Z"}], "thread_id": "Thread-2", "execution_time": 0.01978015899658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_unsubscribe_email_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.145628Z", "completed_at": "2024-03-20T21:27:44.146708Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.157531Z", "completed_at": "2024-03-20T21:27:44.157536Z"}], "thread_id": "Thread-7", "execution_time": 0.027916908264160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_campaign_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.147463Z", "completed_at": "2024-03-20T21:27:44.148715Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.158044Z", "completed_at": "2024-03-20T21:27:44.158046Z"}], "thread_id": "Thread-6", "execution_time": 0.028141021728515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_email_template_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.150185Z", "completed_at": "2024-03-20T21:27:44.151354Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.165550Z", "completed_at": "2024-03-20T21:27:44.165557Z"}], "thread_id": "Thread-4", "execution_time": 0.026201248168945312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_lead_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.152169Z", "completed_at": "2024-03-20T21:27:44.153227Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.166782Z", "completed_at": "2024-03-20T21:27:44.166785Z"}], "thread_id": "Thread-5", "execution_time": 0.02613687515258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_lead_describe_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.155078Z", "completed_at": "2024-03-20T21:27:44.157179Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.168890Z", "completed_at": "2024-03-20T21:27:44.168894Z"}], "thread_id": "Thread-3", "execution_time": 0.02638697624206543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_program_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:43.938653Z", "completed_at": "2024-03-20T21:27:44.652244Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.652986Z", "completed_at": "2024-03-20T21:27:44.652994Z"}], "thread_id": "Thread-1", "execution_time": 0.7910847663879395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__calendar_spine", "compiled": true, "compiled_code": "with spine as (\n\n    \n    \n\n    -- can set first date with var marketo__first_date; \n    -- default first date is the minimum date of stg_marketo__lead\n    \n    \n        \n            \n\n        \n\n    \n\n\n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1550\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2019-12-29' as date) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= \n\n    current_date + ((interval '1 week') * (1))\n\n\n\n)\n\nselect * from filtered\n\n\n\n), recast as (\n    select cast(date_day as date) as date_day\n    from spine\n)\n\nselect *\nfrom recast", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__calendar_spine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.158310Z", "completed_at": "2024-03-20T21:27:44.882423Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.883112Z", "completed_at": "2024-03-20T21:27:44.883118Z"}], "thread_id": "Thread-8", "execution_time": 0.8404076099395752, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_change_data_value", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_change_data_value_tmp\"\n\n), macro as (\n\n    select \n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    api_method_name\n    \n as \n    \n    api_method_name\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    modifying_user\n    \n as \n    \n    modifying_user\n    \n, \n    \n    \n    new_value\n    \n as \n    \n    new_value\n    \n, \n    \n    \n    old_value\n    \n as \n    \n    old_value\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    request_id\n    \n as \n    \n    request_id\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        api_method_name,\n        campaign_id,\n        id as activity_id,\n        lead_id,\n        modifying_user as modifying_user_id,\n        new_value,\n        old_value,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        reason as change_reason,\n        request_id,\n        source as change_source\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_change_data_value\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.173428Z", "completed_at": "2024-03-20T21:27:44.991219Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.996097Z", "completed_at": "2024-03-20T21:27:44.996101Z"}], "thread_id": "Thread-2", "execution_time": 0.8988399505615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_delete_lead", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_delete_lead_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign\n    \n as \n    \n    campaign\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        id as activity_id,\n        _fivetran_synced,\n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign as campaign_name,\n        campaign_id,\n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_delete_lead\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.233692Z", "completed_at": "2024-03-20T21:27:44.992291Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.996981Z", "completed_at": "2024-03-20T21:27:44.996987Z"}], "thread_id": "Thread-3", "execution_time": 0.8899378776550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_open_email", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_open_email_tmp\"\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    device\n    \n as \n    \n    device\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_mobile_device\n    \n as \n    \n    is_mobile_device\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    platform\n    \n as \n    \n    platform\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n, \n    cast(null as integer) as \n    \n    test_variant\n    \n , \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        choice_number,\n        device,\n        email_template_id,\n        id as activity_id,\n        is_mobile_device,\n        lead_id,\n        platform,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id,\n        user_agent\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(primary_attribute_value_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_open_email\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.217992Z", "completed_at": "2024-03-20T21:27:44.987446Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.994016Z", "completed_at": "2024-03-20T21:27:44.994021Z"}], "thread_id": "Thread-6", "execution_time": 0.898446798324585, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_email_bounced", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_bounced_tmp\"\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    cast(null as integer) as \n    \n    test_variant\n    \n \n\n\n    from base\n\n), fields as (\n\n    select \t\n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        category as bounce_category,\n        choice_number,\n        details,\n        email as email_address,\n        email_template_id,\n        id as activity_id,\n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id,\n        subcategory as bounce_subcategory\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(primary_attribute_value_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_bounced\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.227107Z", "completed_at": "2024-03-20T21:27:44.993211Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.997333Z", "completed_at": "2024-03-20T21:27:44.997337Z"}], "thread_id": "Thread-5", "execution_time": 0.8927290439605713, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_merge_leads", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_merge_leads_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    master_updated\n    \n as \n    \n    master_updated\n    \n, \n    \n    \n    merge_ids\n    \n as \n    \n    merge_ids\n    \n, \n    \n    \n    merge_source\n    \n as \n    \n    merge_source\n    \n, \n    \n    \n    merged_in_sales\n    \n as \n    \n    merged_in_sales\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        id as activity_id,\n        _fivetran_synced,\n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        cast(lead_id as integer) as lead_id,\n        master_updated,\n        cast(replace(trim(trim(merge_ids,']'),'['), ',', ', ') as TEXT) as merged_lead_id,\n        merge_source,\n        merged_in_sales,\n        primary_attribute_value,\n        primary_attribute_value_id\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_merge_leads\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.222566Z", "completed_at": "2024-03-20T21:27:44.990691Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.995723Z", "completed_at": "2024-03-20T21:27:44.995728Z"}], "thread_id": "Thread-4", "execution_time": 0.8948290348052979, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_email_delivered", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_delivered_tmp\"\n\n), macro as (\n\n    select \n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n, \n    cast(null as integer) as \n    \n    test_variant\n    \n \n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        choice_number,\n        email_template_id,\n        id as activity_id, \n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(primary_attribute_value_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_delivered\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.180652Z", "completed_at": "2024-03-20T21:27:44.975121Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:44.992771Z", "completed_at": "2024-03-20T21:27:44.992779Z"}], "thread_id": "Thread-7", "execution_time": 0.9098753929138184, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_click_email", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_click_email_tmp\"\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    device\n    \n as \n    \n    device\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_mobile_device\n    \n as \n    \n    is_mobile_device\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    link\n    \n as \n    \n    link\n    \n, \n    cast(null as TEXT) as \n    \n    link_id\n    \n , \n    \n    \n    platform\n    \n as \n    \n    platform\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n, \n    cast(null as integer) as \n    \n    test_variant\n    \n , \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        choice_number,\n        device as click_device,\n        email_template_id,\n        id as activity_id,\n        is_mobile_device,\n        lead_id,\n        link as click_link_url,\n        platform as user_platform,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id,\n        user_agent\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(primary_attribute_value_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_click_email\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.095164Z", "completed_at": "2024-03-20T21:27:45.110543Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.115076Z", "completed_at": "2024-03-20T21:27:45.115084Z"}], "thread_id": "Thread-5", "execution_time": 0.033911705017089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_change_data_value_activity_id.8ae060d108", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_change_data_value\"\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.103420Z", "completed_at": "2024-03-20T21:27:45.110920Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.115401Z", "completed_at": "2024-03-20T21:27:45.115405Z"}], "thread_id": "Thread-4", "execution_time": 0.03382229804992676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_change_data_value_activity_id.7c7047bbcd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_change_data_value\"\nwhere activity_id is not null\ngroup by activity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.121091Z", "completed_at": "2024-03-20T21:27:45.131859Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.133658Z", "completed_at": "2024-03-20T21:27:45.133668Z"}], "thread_id": "Thread-5", "execution_time": 0.016521930694580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_open_email_activity_id.72e7514396", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_open_email\"\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.124598Z", "completed_at": "2024-03-20T21:27:45.132298Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.134056Z", "completed_at": "2024-03-20T21:27:45.134061Z"}], "thread_id": "Thread-4", "execution_time": 0.0167081356048584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_open_email_activity_id.d48e7e93e6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_open_email\"\nwhere activity_id is not null\ngroup by activity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.139998Z", "completed_at": "2024-03-20T21:27:45.150041Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.150865Z", "completed_at": "2024-03-20T21:27:45.150871Z"}], "thread_id": "Thread-7", "execution_time": 0.013657808303833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_email_bounced_activity_id.578b8cddf2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_bounced\"\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.143177Z", "completed_at": "2024-03-20T21:27:45.151732Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.154194Z", "completed_at": "2024-03-20T21:27:45.154199Z"}], "thread_id": "Thread-5", "execution_time": 0.017177104949951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_email_bounced_activity_id.28833155c3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_bounced\"\nwhere activity_id is not null\ngroup by activity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.156251Z", "completed_at": "2024-03-20T21:27:45.165614Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.169576Z", "completed_at": "2024-03-20T21:27:45.169583Z"}], "thread_id": "Thread-7", "execution_time": 0.016714096069335938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_email_delivered_activity_id.138e450885", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_delivered\"\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.161871Z", "completed_at": "2024-03-20T21:27:45.169186Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.170825Z", "completed_at": "2024-03-20T21:27:45.170828Z"}], "thread_id": "Thread-4", "execution_time": 0.016102313995361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_email_delivered_activity_id.6f715c1b87", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_delivered\"\nwhere activity_id is not null\ngroup by activity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.174991Z", "completed_at": "2024-03-20T21:27:45.188042Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.188595Z", "completed_at": "2024-03-20T21:27:45.188602Z"}], "thread_id": "Thread-7", "execution_time": 0.016761302947998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_click_email_activity_id.8e4b4af9fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_click_email\"\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.180086Z", "completed_at": "2024-03-20T21:27:45.194724Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.195960Z", "completed_at": "2024-03-20T21:27:45.195967Z"}], "thread_id": "Thread-4", "execution_time": 0.02273416519165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_click_email_activity_id.6c599791a0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_click_email\"\nwhere activity_id is not null\ngroup by activity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.183253Z", "completed_at": "2024-03-20T21:27:45.195558Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.197581Z", "completed_at": "2024-03-20T21:27:45.197590Z"}], "thread_id": "Thread-5", "execution_time": 0.019834041595458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__opens__by_sent_email_email_send_id.6740510a69", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__opens__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_open_email\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_opens\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__opens__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.190506Z", "completed_at": "2024-03-20T21:27:45.196657Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.199108Z", "completed_at": "2024-03-20T21:27:45.199112Z"}], "thread_id": "Thread-7", "execution_time": 0.01069021224975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__opens__by_sent_email_email_send_id.6e4b7ff601", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__marketo__opens__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_open_email\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_opens\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select\n    email_send_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__marketo__opens__by_sent_email\nwhere email_send_id is not null\ngroup by email_send_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.202072Z", "completed_at": "2024-03-20T21:27:45.215128Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.216370Z", "completed_at": "2024-03-20T21:27:45.216381Z"}], "thread_id": "Thread-4", "execution_time": 0.01798725128173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__bounces__by_sent_email_email_send_id.836589be03", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__bounces__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_bounced\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_bounces\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__bounces__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.206789Z", "completed_at": "2024-03-20T21:27:45.215967Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.218169Z", "completed_at": "2024-03-20T21:27:45.218173Z"}], "thread_id": "Thread-5", "execution_time": 0.01809525489807129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__bounces__by_sent_email_email_send_id.0936aa5b73", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__marketo__bounces__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_bounced\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_bounces\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select\n    email_send_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__marketo__bounces__by_sent_email\nwhere email_send_id is not null\ngroup by email_send_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.211417Z", "completed_at": "2024-03-20T21:27:45.217839Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.220399Z", "completed_at": "2024-03-20T21:27:45.220405Z"}], "thread_id": "Thread-7", "execution_time": 0.015411853790283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__deliveries__by_sent_email_email_send_id.e4b5864b9e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__deliveries__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_delivered\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_deliveries\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__deliveries__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.222453Z", "completed_at": "2024-03-20T21:27:45.238281Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.239071Z", "completed_at": "2024-03-20T21:27:45.239081Z"}], "thread_id": "Thread-4", "execution_time": 0.0200960636138916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__deliveries__by_sent_email_email_send_id.f839cd9d44", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__marketo__deliveries__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_delivered\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_deliveries\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select\n    email_send_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__marketo__deliveries__by_sent_email\nwhere email_send_id is not null\ngroup by email_send_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.233817Z", "completed_at": "2024-03-20T21:27:45.239397Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.241442Z", "completed_at": "2024-03-20T21:27:45.241447Z"}], "thread_id": "Thread-7", "execution_time": 0.013207674026489258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__clicks__by_sent_email_email_send_id.cae3e572a1", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__marketo__clicks__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_click_email\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_clicks\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select\n    email_send_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__marketo__clicks__by_sent_email\nwhere email_send_id is not null\ngroup by email_send_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.229646Z", "completed_at": "2024-03-20T21:27:45.240357Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.241751Z", "completed_at": "2024-03-20T21:27:45.241754Z"}], "thread_id": "Thread-5", "execution_time": 0.020926952362060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__clicks__by_sent_email_email_send_id.9bac4f36a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__clicks__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_click_email\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_clicks\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__clicks__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.725070Z", "completed_at": "2024-03-20T21:27:45.437267Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.437989Z", "completed_at": "2024-03-20T21:27:45.437995Z"}], "thread_id": "Thread-1", "execution_time": 0.7560379505157471, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_send_email", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_send_email_tmp\"\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        choice_number,\n        email_template_id,\n        id as activity_id,\n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id\n\n        \n\n\n\n\n\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(primary_attribute_value_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_send_email\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.487230Z", "completed_at": "2024-03-20T21:27:45.495705Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.497514Z", "completed_at": "2024-03-20T21:27:45.497520Z"}], "thread_id": "Thread-7", "execution_time": 0.016283273696899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_send_email_activity_id.4eaf534bc8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_send_email\"\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.491604Z", "completed_at": "2024-03-20T21:27:45.497017Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.500135Z", "completed_at": "2024-03-20T21:27:45.500140Z"}], "thread_id": "Thread-5", "execution_time": 0.018060922622680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_send_email_activity_id.bd25ee45d1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_send_email\"\nwhere activity_id is not null\ngroup by activity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.501754Z", "completed_at": "2024-03-20T21:27:45.510811Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.511511Z", "completed_at": "2024-03-20T21:27:45.511519Z"}], "thread_id": "Thread-1", "execution_time": 0.012995004653930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_sends_deduped_email_send_id.9ad849d3a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__email_sends_deduped as (\nwith base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_send_email\"\n\n), windowed as (\n\n    select \n        *,\n        row_number() over (partition by email_send_id order by activity_timestamp asc) as activity_rank\n    from base\n\n), filtered as (\n\n    select *\n    from windowed\n    where activity_rank = 1\n\n)\n\nselect *\nfrom filtered\n) select email_send_id\nfrom __dbt__cte__marketo__email_sends_deduped\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.505774Z", "completed_at": "2024-03-20T21:27:45.512897Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.513502Z", "completed_at": "2024-03-20T21:27:45.513507Z"}], "thread_id": "Thread-4", "execution_time": 0.014274835586547852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_sends_deduped_email_send_id.39a96fd954", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__marketo__email_sends_deduped as (\nwith base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_send_email\"\n\n), windowed as (\n\n    select \n        *,\n        row_number() over (partition by email_send_id order by activity_timestamp asc) as activity_rank\n    from base\n\n), filtered as (\n\n    select *\n    from windowed\n    where activity_rank = 1\n\n)\n\nselect *\nfrom filtered\n) select\n    email_send_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__marketo__email_sends_deduped\nwhere email_send_id is not null\ngroup by email_send_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:44.998153Z", "completed_at": "2024-03-20T21:27:45.774368Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.774897Z", "completed_at": "2024-03-20T21:27:45.774904Z"}], "thread_id": "Thread-8", "execution_time": 0.8409600257873535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__lead", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead_tmp\"\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    created_at\n    \n as created_timestamp , \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    id\n    \n as lead_id , \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    updated_at\n    \n as updated_timestamp , \n    cast(null as TEXT) as \n    \n    phone\n    \n , \n    cast(null as TEXT) as \n    \n    main_phone\n    \n , \n    cast(null as TEXT) as \n    \n    mobile_phone\n    \n , \n    cast(null as TEXT) as \n    \n    company\n    \n , \n    cast(null as TEXT) as \n    \n    inferred_company\n    \n , \n    cast(null as TEXT) as \n    \n    address_lead\n    \n , \n    cast(null as TEXT) as \n    \n    address\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as TEXT) as \n    \n    state_code\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    cast(null as TEXT) as \n    \n    country_code\n    \n , \n    cast(null as TEXT) as \n    \n    postal_code\n    \n , \n    cast(null as TEXT) as \n    \n    billing_street\n    \n , \n    cast(null as TEXT) as \n    \n    billing_city\n    \n , \n    cast(null as TEXT) as \n    \n    billing_state\n    \n , \n    cast(null as TEXT) as \n    \n    billing_state_code\n    \n , \n    cast(null as TEXT) as \n    \n    billing_country\n    \n , \n    cast(null as TEXT) as \n    \n    billing_country_code\n    \n , \n    cast(null as TEXT) as \n    \n    billing_postal_code\n    \n , \n    cast(null as TEXT) as \n    \n    inferred_city\n    \n , \n    cast(null as TEXT) as \n    \n    inferred_state_region\n    \n , \n    cast(null as TEXT) as \n    \n    inferred_country\n    \n , \n    cast(null as TEXT) as \n    \n    inferred_postal_code\n    \n , \n    cast(null as TEXT) as \n    \n    inferred_phone_area_code\n    \n , \n    cast(null as TEXT) as \n    \n    anonymous_ip\n    \n , \n    cast(null as boolean) as is_unsubscribed , \n    cast(null as boolean) as is_email_invalid , \n    cast(null as boolean) as \n    \n    do_not_call\n    \n \n\n\n        -- This will check if there are non-default columns to bring in\n        \n        \n        \n        \n        \n    from base\n\n)\n\nselect *\nfrom macro", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.839608Z", "completed_at": "2024-03-20T21:27:45.855344Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.855903Z", "completed_at": "2024-03-20T21:27:45.855908Z"}], "thread_id": "Thread-7", "execution_time": 0.01996016502380371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.int_marketo__lead", "compiled": true, "compiled_code": "\n\nwith leads as(\n    select * \n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead\"\n\n), activity_merge_leads as (\n    select * \n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_merge_leads\"\n\n), unique_merges as (\n\n    select \n        cast(lead_id as integer) as lead_id,\n        \n    string_agg(distinct merged_lead_id, ', ')\n\n as merged_into_lead_id\n\n    from activity_merge_leads\n    group by 1 \n\n/*If you do not use the activity_delete_lead table, set var marketo__activity_delete_lead_enabled \nto False. Default is True*/\n\n), deleted_leads as (\n\n    select distinct lead_id\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_delete_lead\"\n    \n\n\n), joined as (\n\n    select \n        leads.*,\n\n        /*If you do not use the activity_delete_lead table, set var marketo__activity_delete_lead_enabled \n        to False. Default is True*/\n        \n        case when deleted_leads.lead_id is not null then True else False end as is_deleted,\n        \n\n        unique_merges.merged_into_lead_id,\n        case when unique_merges.merged_into_lead_id is not null then True else False end as is_merged\n    from leads\n\n    /*If you do not use the activity_delete_lead table, set var marketo__activity_delete_lead_enabled \n    to False. Default is True*/\n    \n    left join deleted_leads on leads.lead_id = deleted_leads.lead_id\n    \n\n    left join unique_merges on leads.lead_id = unique_merges.lead_id \n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"int_marketo__lead\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.847737Z", "completed_at": "2024-03-20T21:27:45.856173Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.858317Z", "completed_at": "2024-03-20T21:27:45.858324Z"}], "thread_id": "Thread-5", "execution_time": 0.021615982055664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__lead_lead_id.a539cbf055", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead\"\nwhere lead_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.851980Z", "completed_at": "2024-03-20T21:27:45.857733Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.860323Z", "completed_at": "2024-03-20T21:27:45.860330Z"}], "thread_id": "Thread-1", "execution_time": 0.0226747989654541, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__lead_lead_id.1a4c20db9f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lead_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead\"\nwhere lead_id is not null\ngroup by lead_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.084530Z", "completed_at": "2024-03-20T21:27:45.815036Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.816394Z", "completed_at": "2024-03-20T21:27:45.816400Z"}], "thread_id": "Thread-3", "execution_time": 0.7918190956115723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__lead_describe", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead_describe_tmp\"\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    data_type\n    \n as \n    \n    data_type\n    \n, \n    \n    \n    display_name\n    \n as \n    \n    display_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    length\n    \n as \n    \n    length\n    \n, \n    \n    \n    restname\n    \n as \n    \n    restname\n    \n, \n    \n    \n    restread_only\n    \n as \n    \n    restread_only\n    \n, \n    \n    \n    soapname\n    \n as \n    \n    soapname\n    \n, \n    \n    \n    soapread_only\n    \n as \n    \n    soapread_only\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        data_type,\n        display_name,\n        id as lead_describe_id,\n        length as field_max_length,\n        restname as rest_name,\n        restread_only as is_rest_readonly,\n        soapname as soap_name,\n        soapread_only as is_soap_readonly\n    from macro\n\n), regex as (\n\n    select \n        *,\n        case\n            when rest_name like '%\\\\_\\\\_c%' then lower(rest_name)\n            else ltrim(lower(regexp_replace(rest_name, '[A-Z]','_\\\\0')),'_')\n        end as rest_name_xf\n    from fields\n\n)\n\nselect *\nfrom regex", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead_describe\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.073316Z", "completed_at": "2024-03-20T21:27:45.812291Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.814289Z", "completed_at": "2024-03-20T21:27:45.814297Z"}], "thread_id": "Thread-2", "execution_time": 0.8078248500823975, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_unsubscribe_email", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_unsubscribe_email_tmp\"\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    client_ip_address\n    \n as \n    \n    client_ip_address\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    form_fields\n    \n as \n    \n    form_fields\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    query_parameters\n    \n as \n    \n    query_parameters\n    \n, \n    \n    \n    referrer_url\n    \n as \n    \n    referrer_url\n    \n, \n    cast(null as integer) as \n    \n    test_variant\n    \n , \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n, \n    \n    \n    webform_id\n    \n as \n    \n    webform_id\n    \n, \n    \n    \n    webpage_id\n    \n as \n    \n    webpage_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \t\n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        client_ip_address,\n        email_template_id,\n        form_fields,\n        id as activity_id,\n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        query_parameters,\n        referrer_url,\n        user_agent,\n        webform_id,\n        webpage_id\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(primary_attribute_value_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_unsubscribe_email\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.861754Z", "completed_at": "2024-03-20T21:27:45.872239Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.874884Z", "completed_at": "2024-03-20T21:27:45.874890Z"}], "thread_id": "Thread-8", "execution_time": 0.018038034439086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__lead_calendar_spine", "compiled": true, "compiled_code": "\n\nwith calendar as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__calendar_spine\"\n    \n    where date_day >= (select max(date_day) from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__lead_calendar_spine\")\n    \n\n), leads as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"int_marketo__lead\"\n    \n), joined as (\n\n    select \n        calendar.date_day,\n        leads.lead_id\n    from calendar\n    inner join leads\n        on calendar.date_day >= cast(leads.created_timestamp as date)\n\n), surrogate_key as (\n\n    select\n        *,\n        md5(cast(coalesce(cast(date_day as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as lead_day_id\n    from joined\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__lead_calendar_spine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.089346Z", "completed_at": "2024-03-20T21:27:45.815344Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.816833Z", "completed_at": "2024-03-20T21:27:45.816843Z"}], "thread_id": "Thread-6", "execution_time": 0.822537899017334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__email_template_history", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__email_template_history_tmp\"\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    folder_folder_name\n    \n as \n    \n    folder_folder_name\n    \n, \n    \n    \n    folder_id\n    \n as \n    \n    folder_id\n    \n, \n    \n    \n    folder_type\n    \n as \n    \n    folder_type\n    \n, \n    \n    \n    folder_value\n    \n as \n    \n    folder_value\n    \n, \n    \n    \n    from_email\n    \n as \n    \n    from_email\n    \n, \n    \n    \n    from_name\n    \n as \n    \n    from_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    operational\n    \n as \n    \n    operational\n    \n, \n    \n    \n    program_id\n    \n as \n    \n    program_id\n    \n, \n    \n    \n    publish_to_msi\n    \n as \n    \n    publish_to_msi\n    \n, \n    \n    \n    reply_email\n    \n as \n    \n    reply_email\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    template\n    \n as \n    \n    template\n    \n, \n    \n    \n    text_only\n    \n as \n    \n    text_only\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    version\n    \n as \n    \n    version\n    \n, \n    \n    \n    web_view\n    \n as \n    \n    web_view\n    \n, \n    \n    \n    workspace\n    \n as \n    \n    workspace\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        created_at as created_timestamp,\n        description,\n        folder_folder_name as folder_name,\n        folder_id,\n        folder_type,\n        folder_value,\n        from_email,\n        from_name,\n        id as email_template_id,\n        name as email_template_name,\n        operational as is_operational,\n        program_id,\n        publish_to_msi,\n        reply_email,\n        status as email_template_status,\n        subject as email_subject,\n        template as parent_template_id,\n        text_only as is_text_only,\n        updated_at as updated_timestamp,\n        url as email_template_url,\n        version as version_type,\n        web_view as has_web_view_enabled,\n        workspace as workspace_name\n    from macro\n\n), versions as (\n\n    select  \n        *,\n        row_number() over (partition by email_template_id order by updated_timestamp) as inferred_version,\n        count(*) over (partition by email_template_id) as total_count_of_versions\n    from fields\n\n), valid as (\n\n    select \n        *, \n        case\n            when inferred_version = 1 then created_timestamp\n            else updated_timestamp\n        end as valid_from,\n        lead(updated_timestamp) over (partition by email_template_id order by updated_timestamp) as valid_to,\n        inferred_version = total_count_of_versions as is_most_recent_version\n    from versions\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(email_template_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(inferred_version as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as email_template_history_id\n    from valid\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__email_template_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.894302Z", "completed_at": "2024-03-20T21:27:45.905608Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.918208Z", "completed_at": "2024-03-20T21:27:45.918217Z"}], "thread_id": "Thread-5", "execution_time": 0.044297218322753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__lead_describe_lead_describe_id.37612f6879", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_describe_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead_describe\"\nwhere lead_describe_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.899331Z", "completed_at": "2024-03-20T21:27:45.906190Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.918969Z", "completed_at": "2024-03-20T21:27:45.918975Z"}], "thread_id": "Thread-1", "execution_time": 0.04503321647644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__lead_describe_lead_describe_id.4f0a7f9cc1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lead_describe_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead_describe\"\nwhere lead_describe_id is not null\ngroup by lead_describe_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.909691Z", "completed_at": "2024-03-20T21:27:45.919339Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.928060Z", "completed_at": "2024-03-20T21:27:45.928071Z"}], "thread_id": "Thread-2", "execution_time": 0.0317230224609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_unsubscribe_email_activity_id.a31edf42c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_unsubscribe_email\"\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.913418Z", "completed_at": "2024-03-20T21:27:45.920108Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.929321Z", "completed_at": "2024-03-20T21:27:45.929327Z"}], "thread_id": "Thread-8", "execution_time": 0.030254125595092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_unsubscribe_email_activity_id.a3bca07e06", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_unsubscribe_email\"\nwhere activity_id is not null\ngroup by activity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.922706Z", "completed_at": "2024-03-20T21:27:45.932020Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:45.995942Z", "completed_at": "2024-03-20T21:27:45.995951Z"}], "thread_id": "Thread-6", "execution_time": 0.07956099510192871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__email_template_history_email_template_history_id.dcab273dfa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect email_template_history_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__email_template_history\"\nwhere email_template_history_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.934562Z", "completed_at": "2024-03-20T21:27:46.003662Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.006069Z", "completed_at": "2024-03-20T21:27:46.006077Z"}], "thread_id": "Thread-5", "execution_time": 0.07790017127990723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__email_template_history_email_template_history_id.7e3c0524e2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    email_template_history_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__email_template_history\"\nwhere email_template_history_id is not null\ngroup by email_template_history_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.974766Z", "completed_at": "2024-03-20T21:27:46.004260Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.006860Z", "completed_at": "2024-03-20T21:27:46.006865Z"}], "thread_id": "Thread-1", "execution_time": 0.07713580131530762, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__unsubscribes__by_sent_email_email_send_id.feccee3d32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__unsubscribes__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_unsubscribe_email\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_unsubscribes\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__unsubscribes__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.955136Z", "completed_at": "2024-03-20T21:27:46.004675Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.007188Z", "completed_at": "2024-03-20T21:27:46.007191Z"}], "thread_id": "Thread-3", "execution_time": 0.07813405990600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__email_sends", "compiled": true, "compiled_code": "with  __dbt__cte__marketo__email_sends_deduped as (\nwith base as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_send_email\"\n\n), windowed as (\n\n    select \n        *,\n        row_number() over (partition by email_send_id order by activity_timestamp asc) as activity_rank\n    from base\n\n), filtered as (\n\n    select *\n    from windowed\n    where activity_rank = 1\n\n)\n\nselect *\nfrom filtered\n),  __dbt__cte__marketo__opens__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_open_email\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_opens\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n),  __dbt__cte__marketo__bounces__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_bounced\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_bounces\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n),  __dbt__cte__marketo__clicks__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_click_email\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_clicks\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n),  __dbt__cte__marketo__deliveries__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_email_delivered\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_deliveries\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n),  __dbt__cte__marketo__unsubscribes__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_unsubscribe_email\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_unsubscribes\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n), sends as (\n\n    select *\n    from __dbt__cte__marketo__email_sends_deduped\n\n), opens as (\n\n    select *\n    from __dbt__cte__marketo__opens__by_sent_email\n\n), bounces as (\n\n    select *\n    from __dbt__cte__marketo__bounces__by_sent_email\n\n), clicks as (\n\n    select *\n    from __dbt__cte__marketo__clicks__by_sent_email\n\n), deliveries as (\n\n    select *\n    from __dbt__cte__marketo__deliveries__by_sent_email\n\n), unsubscribes as (\n\n    select *\n    from __dbt__cte__marketo__unsubscribes__by_sent_email\n\n\n\n), email_templates as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__email_template_history\"\n\n), metrics as (\n\n    select\n        sends.*,\n        coalesce(opens.count_opens, 0) as count_opens,\n        coalesce(bounces.count_bounces, 0) as count_bounces,\n        coalesce(clicks.count_clicks, 0) as count_clicks,\n        coalesce(deliveries.count_deliveries, 0) as count_deliveries,\n        coalesce(unsubscribes.count_unsubscribes, 0) as count_unsubscribes\n    from sends\n    left join opens using (email_send_id)\n    left join bounces using (email_send_id)\n    left join clicks using (email_send_id)\n    left join deliveries using (email_send_id)\n    left join unsubscribes using (email_send_id)\n\n), booleans as (\n\n    select\n        *,\n        count_opens > 0 as was_opened,\n        count_bounces > 0 as was_bounced,\n        count_clicks > 0 as was_clicked,\n        count_deliveries > 0 as was_delivered,\n        count_unsubscribes > 0 as was_unsubscribed\n    from metrics\n\n), joined as (\n\n    select \n        booleans.*,\n        \n        email_templates.is_operational\n    from booleans\n    \n    left join email_templates\n        on booleans.email_template_id = email_templates.email_template_id\n        and booleans.activity_timestamp \n            between email_templates.valid_from\n            and coalesce(email_templates.valid_to, cast('2099-01-01' as timestamp))\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_sends\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.997575Z", "completed_at": "2024-03-20T21:27:46.006369Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.009613Z", "completed_at": "2024-03-20T21:27:46.009624Z"}], "thread_id": "Thread-2", "execution_time": 0.06092405319213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__unsubscribes__by_sent_email_email_send_id.ecc7407ca9", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__marketo__unsubscribes__by_sent_email as (\nwith activity as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_unsubscribe_email\"\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_unsubscribes\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select\n    email_send_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__marketo__unsubscribes__by_sent_email\nwhere email_send_id is not null\ngroup by email_send_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.031698Z", "completed_at": "2024-03-20T21:27:46.042373Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.046118Z", "completed_at": "2024-03-20T21:27:46.046124Z"}], "thread_id": "Thread-6", "execution_time": 0.02884197235107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_sends_email_send_id.2ad799df7a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect email_send_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_sends\"\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.035099Z", "completed_at": "2024-03-20T21:27:46.042685Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.047231Z", "completed_at": "2024-03-20T21:27:46.047235Z"}], "thread_id": "Thread-5", "execution_time": 0.028934001922607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_sends_email_send_id.f2367cb085", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    email_send_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_sends\"\nwhere email_send_id is not null\ngroup by email_send_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.050130Z", "completed_at": "2024-03-20T21:27:46.076564Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.083868Z", "completed_at": "2024-03-20T21:27:46.083875Z"}], "thread_id": "Thread-3", "execution_time": 0.045758962631225586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__leads", "compiled": true, "compiled_code": "with  __dbt__cte__marketo__email_stats__by_lead as (\nwith email_sends as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_sends\"\n\n), aggregated as (\n\n    select\n        lead_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where lead_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n), leads as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"int_marketo__lead\"\n\n), email_stats as (\n\n    select *\n    from __dbt__cte__marketo__email_stats__by_lead\n\n), joined as (\n\n    select\n        leads.*,\n        coalesce(email_stats.count_sends, 0) as count_sends,\n        coalesce(email_stats.count_opens, 0) as count_opens,\n        coalesce(email_stats.count_bounces, 0) as count_bounces,\n        coalesce(email_stats.count_clicks, 0) as count_clicks,\n        coalesce(email_stats.count_deliveries, 0) as count_deliveries,\n        coalesce(email_stats.count_unsubscribes, 0) as count_unsubscribes,\n        coalesce(email_stats.count_unique_opens, 0) as count_unique_opens,\n        coalesce(email_stats.count_unique_clicks, 0) as count_unique_clicks\n    from leads\n    left join email_stats\n        using (lead_id)\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__leads\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.059325Z", "completed_at": "2024-03-20T21:27:46.077736Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.090132Z", "completed_at": "2024-03-20T21:27:46.090139Z"}], "thread_id": "Thread-1", "execution_time": 0.046050071716308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_stats__by_lead_lead_id.45cb4697f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__email_stats__by_lead as (\nwith email_sends as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_sends\"\n\n), aggregated as (\n\n    select\n        lead_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where lead_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n) select lead_id\nfrom __dbt__cte__marketo__email_stats__by_lead\nwhere lead_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.062897Z", "completed_at": "2024-03-20T21:27:46.078035Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.090465Z", "completed_at": "2024-03-20T21:27:46.090476Z"}], "thread_id": "Thread-2", "execution_time": 0.04627108573913574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_stats__by_lead_lead_id.aae36042a7", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__marketo__email_stats__by_lead as (\nwith email_sends as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_sends\"\n\n), aggregated as (\n\n    select\n        lead_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where lead_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n) select\n    lead_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__marketo__email_stats__by_lead\nwhere lead_id is not null\ngroup by lead_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.067381Z", "completed_at": "2024-03-20T21:27:46.078831Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.091940Z", "completed_at": "2024-03-20T21:27:46.091945Z"}], "thread_id": "Thread-8", "execution_time": 0.047122955322265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__email_templates", "compiled": true, "compiled_code": "with  __dbt__cte__marketo__email_stats__by_email_template as (\nwith email_sends as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_sends\"\n\n), aggregated as (\n\n    select\n        email_template_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where email_template_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n), email_templates as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__email_template_history\"\n    where is_most_recent_version = True\n\n), email_stats as (\n\n    select *\n    from __dbt__cte__marketo__email_stats__by_email_template\n\n), joined as (\n\n    select\n        email_templates.*,\n        coalesce(email_stats.count_sends, 0) as count_sends,\n        coalesce(email_stats.count_opens, 0) as count_opens,\n        coalesce(email_stats.count_bounces, 0) as count_bounces,\n        coalesce(email_stats.count_clicks, 0) as count_clicks,\n        coalesce(email_stats.count_deliveries, 0) as count_deliveries,\n        coalesce(email_stats.count_unsubscribes, 0) as count_unsubscribes,\n        coalesce(email_stats.count_unique_opens, 0) as count_unique_opens,\n        coalesce(email_stats.count_unique_clicks, 0) as count_unique_clicks\n    from email_templates\n    left join email_stats\n        using (email_template_id)\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_templates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.079092Z", "completed_at": "2024-03-20T21:27:46.091565Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.096059Z", "completed_at": "2024-03-20T21:27:46.096067Z"}], "thread_id": "Thread-6", "execution_time": 0.023427963256835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_stats__by_email_template_email_template_id.dbce7d06c1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__email_stats__by_email_template as (\nwith email_sends as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_sends\"\n\n), aggregated as (\n\n    select\n        email_template_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where email_template_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n) select email_template_id\nfrom __dbt__cte__marketo__email_stats__by_email_template\nwhere email_template_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.084371Z", "completed_at": "2024-03-20T21:27:46.093740Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.098442Z", "completed_at": "2024-03-20T21:27:46.098449Z"}], "thread_id": "Thread-5", "execution_time": 0.02414226531982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_stats__by_email_template_email_template_id.e3f8e60505", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__marketo__email_stats__by_email_template as (\nwith email_sends as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_sends\"\n\n), aggregated as (\n\n    select\n        email_template_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where email_template_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n) select\n    email_template_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__marketo__email_stats__by_email_template\nwhere email_template_id is not null\ngroup by email_template_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.101469Z", "completed_at": "2024-03-20T21:27:46.115562Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.116392Z", "completed_at": "2024-03-20T21:27:46.116398Z"}], "thread_id": "Thread-3", "execution_time": 0.020434141159057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__leads_lead_id.4dd423c832", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__leads\"\nwhere lead_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.108849Z", "completed_at": "2024-03-20T21:27:46.117417Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.119368Z", "completed_at": "2024-03-20T21:27:46.119376Z"}], "thread_id": "Thread-2", "execution_time": 0.020641803741455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_templates_email_template_id.3b92bfe332", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect email_template_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_templates\"\nwhere email_template_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.112327Z", "completed_at": "2024-03-20T21:27:46.117719Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.119689Z", "completed_at": "2024-03-20T21:27:46.119693Z"}], "thread_id": "Thread-8", "execution_time": 0.02078413963317871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_templates_email_template_id.82812ecfe8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    email_template_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__email_templates\"\nwhere email_template_id is not null\ngroup by email_template_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.105312Z", "completed_at": "2024-03-20T21:27:46.118083Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.119965Z", "completed_at": "2024-03-20T21:27:46.119968Z"}], "thread_id": "Thread-1", "execution_time": 0.023639917373657227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__leads_lead_id.1ac49a9fda", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lead_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__leads\"\nwhere lead_id is not null\ngroup by lead_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.887541Z", "completed_at": "2024-03-20T21:27:46.490193Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.490814Z", "completed_at": "2024-03-20T21:27:46.490820Z"}], "thread_id": "Thread-4", "execution_time": 0.6167380809783936, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__change_data_pivot", "compiled": true, "compiled_code": "\n\n\n    \nwith change_data as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_change_data_value\"\n    \n    where cast(\n\n    activity_timestamp + ((interval '1 day') * (-1))\n\n as date) >= (select max(date_day) from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_pivot\")\n    \n\n), lead_describe as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead_describe\"\n\n), joined as (\n\n    -- Join the column names from the describe table onto the change data table\n\n    select \n        change_data.*,\n        lead_describe.rest_name_xf as primary_attribute_column\n    from change_data\n    left join lead_describe\n        on change_data.primary_attribute_value_id = lead_describe.lead_describe_id\n\n), event_order as (\n\n    select \n        *,\n        row_number() over (\n            partition by cast(activity_timestamp as date), lead_id, primary_attribute_value_id\n            order by activity_timestamp asc, activity_id desc -- In the case that events come in the exact same time, we will rely on the activity_id to prove the order\n            ) as row_num\n    from joined\n\n), filtered as (\n\n    -- Find the first event that occurs on each day for each lead\n\n    select *\n    from event_order\n    where row_num = 1\n\n), pivots as (\n\n    -- For each column that is in both the lead_history_columns variable and the restname of the lead_describe table,\n    -- pivot out the value into it's own column. This will feed the daily slowly changing dimension model.\n\n    select \n        lead_id,\n        cast(\n\n    activity_timestamp + ((interval '1 day') * (-1))\n\n as date) as date_day\n\n        \n        \n        , min(case when lower(primary_attribute_column) = 'urgency' then old_value end) as urgency\n        \n        \n        , min(case when lower(primary_attribute_column) = 'priority' then old_value end) as priority\n        \n    \n    from filtered\n    where cast(activity_timestamp as date) < current_date\n    group by 1,2\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date_day as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as lead_day_id\n    from pivots\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_pivot\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:45.879660Z", "completed_at": "2024-03-20T21:27:46.491432Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.492900Z", "completed_at": "2024-03-20T21:27:46.492906Z"}], "thread_id": "Thread-7", "execution_time": 0.6210439205169678, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__change_data_details", "compiled": true, "compiled_code": "\n\n\n    \nwith change_data as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__activity_change_data_value\"\n    \n    where cast(\n\n    activity_timestamp + ((interval '1 day') * (-1))\n\n as date) >= (select max(date_day) from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_details\")\n    \n\n), lead_describe as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo_source\".\"stg_marketo__lead_describe\"\n\n), joined as ( \n\n    -- Join the column names from the describe table onto the change data table\n\n    select \n        change_data.*,\n        lead_describe.rest_name_xf as primary_attribute_column\n    from change_data\n    left join lead_describe\n        on change_data.primary_attribute_value_id = lead_describe.lead_describe_id\n\n), pivots as (\n\n    -- For each column that is in both the lead_history_columns variable and the restname of the lead_describe table,\n    -- find whether a change occurred for a given column on a given day for a given lead. \n    -- This will feed the daily slowly changing dimension model.\n\n    select \n        lead_id,\n        cast(\n\n    activity_timestamp + ((interval '1 day') * (-1))\n\n as date) as date_day\n\n        \n        \n        , cast( max(case when lower(primary_attribute_column) = 'urgency' then 1 else 0 end) as boolean) as urgency\n        \n        \n        , cast( max(case when lower(primary_attribute_column) = 'priority' then 1 else 0 end) as boolean) as priority\n        \n    \n    from joined\n    where cast(activity_timestamp as date) < current_date\n    group by 1,2\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date_day as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as lead_day_id\n    from pivots\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_details\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.496123Z", "completed_at": "2024-03-20T21:27:46.505870Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.521507Z", "completed_at": "2024-03-20T21:27:46.521515Z"}], "thread_id": "Thread-6", "execution_time": 0.03267383575439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__change_data_pivot_lead_day_id.100210c0d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_day_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_pivot\"\nwhere lead_day_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.500764Z", "completed_at": "2024-03-20T21:27:46.506629Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.525838Z", "completed_at": "2024-03-20T21:27:46.525845Z"}], "thread_id": "Thread-5", "execution_time": 0.0330350399017334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__change_data_pivot_lead_day_id.19c42a1a1b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lead_day_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_pivot\"\nwhere lead_day_id is not null\ngroup by lead_day_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.518411Z", "completed_at": "2024-03-20T21:27:46.528273Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.529913Z", "completed_at": "2024-03-20T21:27:46.529918Z"}], "thread_id": "Thread-8", "execution_time": 0.025432825088500977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__change_data_details_lead_day_id.f2b4e99285", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_day_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_details\"\nwhere lead_day_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.521808Z", "completed_at": "2024-03-20T21:27:46.528808Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:46.530193Z", "completed_at": "2024-03-20T21:27:46.530196Z"}], "thread_id": "Thread-1", "execution_time": 0.025266170501708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__change_data_details_lead_day_id.9ede3f08c4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lead_day_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_details\"\nwhere lead_day_id is not null\ngroup by lead_day_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:46.508141Z", "completed_at": "2024-03-20T21:27:47.582562Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:47.583137Z", "completed_at": "2024-03-20T21:27:47.583143Z"}], "thread_id": "Thread-2", "execution_time": 1.147665023803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__change_data_scd", "compiled": true, "compiled_code": "\n\n\nwith change_data as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_pivot\"\n    \n    where date_day >= (select max(valid_to) from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_scd\")\n    \n\n), leads as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"int_marketo__lead\"\n\n), details as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_details\"\n    \n    where date_day >= (select max(valid_to) from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_scd\")\n    \n\n), unioned as (\n\n    -- unions together the current state of leads and their history changes. \n    -- we need the current state to work backwards from to backfill the slowly changing dimension model\n\n    \n\n        (\n            select\n\n                cast('\"postgres\".\"marketo_integration_tests_56_marketo\".\"int_marketo__lead\"' as TEXT) as _dbt_source_relation,\n                \n                    cast(\"_fivetran_synced\" as timestamp without time zone) as \"_fivetran_synced\" ,\n                    cast(\"created_timestamp\" as timestamp without time zone) as \"created_timestamp\" ,\n                    cast(\"email\" as text) as \"email\" ,\n                    cast(\"first_name\" as text) as \"first_name\" ,\n                    cast(\"lead_id\" as integer) as \"lead_id\" ,\n                    cast(\"last_name\" as text) as \"last_name\" ,\n                    cast(\"updated_timestamp\" as text) as \"updated_timestamp\" ,\n                    cast(\"phone\" as text) as \"phone\" ,\n                    cast(\"main_phone\" as text) as \"main_phone\" ,\n                    cast(\"mobile_phone\" as text) as \"mobile_phone\" ,\n                    cast(\"company\" as text) as \"company\" ,\n                    cast(\"inferred_company\" as text) as \"inferred_company\" ,\n                    cast(\"address_lead\" as text) as \"address_lead\" ,\n                    cast(\"address\" as text) as \"address\" ,\n                    cast(\"city\" as text) as \"city\" ,\n                    cast(\"state\" as text) as \"state\" ,\n                    cast(\"state_code\" as text) as \"state_code\" ,\n                    cast(\"country\" as text) as \"country\" ,\n                    cast(\"country_code\" as text) as \"country_code\" ,\n                    cast(\"postal_code\" as text) as \"postal_code\" ,\n                    cast(\"billing_street\" as text) as \"billing_street\" ,\n                    cast(\"billing_city\" as text) as \"billing_city\" ,\n                    cast(\"billing_state\" as text) as \"billing_state\" ,\n                    cast(\"billing_state_code\" as text) as \"billing_state_code\" ,\n                    cast(\"billing_country\" as text) as \"billing_country\" ,\n                    cast(\"billing_country_code\" as text) as \"billing_country_code\" ,\n                    cast(\"billing_postal_code\" as text) as \"billing_postal_code\" ,\n                    cast(\"inferred_city\" as text) as \"inferred_city\" ,\n                    cast(\"inferred_state_region\" as text) as \"inferred_state_region\" ,\n                    cast(\"inferred_country\" as text) as \"inferred_country\" ,\n                    cast(\"inferred_postal_code\" as text) as \"inferred_postal_code\" ,\n                    cast(\"inferred_phone_area_code\" as text) as \"inferred_phone_area_code\" ,\n                    cast(\"anonymous_ip\" as text) as \"anonymous_ip\" ,\n                    cast(\"is_unsubscribed\" as boolean) as \"is_unsubscribed\" ,\n                    cast(\"is_email_invalid\" as boolean) as \"is_email_invalid\" ,\n                    cast(\"do_not_call\" as boolean) as \"do_not_call\" ,\n                    cast(\"is_deleted\" as boolean) as \"is_deleted\" ,\n                    cast(\"merged_into_lead_id\" as text) as \"merged_into_lead_id\" ,\n                    cast(\"is_merged\" as boolean) as \"is_merged\" ,\n                    cast(null as date) as \"date_day\" ,\n                    cast(null as text) as \"urgency\" ,\n                    cast(null as text) as \"priority\" ,\n                    cast(null as text) as \"lead_day_id\" \n\n            from leads\n        )\n\n        union all\n        \n\n        (\n            select\n\n                cast('\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_pivot\"' as TEXT) as _dbt_source_relation,\n                \n                    cast(null as timestamp without time zone) as \"_fivetran_synced\" ,\n                    cast(null as timestamp without time zone) as \"created_timestamp\" ,\n                    cast(null as text) as \"email\" ,\n                    cast(null as text) as \"first_name\" ,\n                    cast(\"lead_id\" as integer) as \"lead_id\" ,\n                    cast(null as text) as \"last_name\" ,\n                    cast(null as text) as \"updated_timestamp\" ,\n                    cast(null as text) as \"phone\" ,\n                    cast(null as text) as \"main_phone\" ,\n                    cast(null as text) as \"mobile_phone\" ,\n                    cast(null as text) as \"company\" ,\n                    cast(null as text) as \"inferred_company\" ,\n                    cast(null as text) as \"address_lead\" ,\n                    cast(null as text) as \"address\" ,\n                    cast(null as text) as \"city\" ,\n                    cast(null as text) as \"state\" ,\n                    cast(null as text) as \"state_code\" ,\n                    cast(null as text) as \"country\" ,\n                    cast(null as text) as \"country_code\" ,\n                    cast(null as text) as \"postal_code\" ,\n                    cast(null as text) as \"billing_street\" ,\n                    cast(null as text) as \"billing_city\" ,\n                    cast(null as text) as \"billing_state\" ,\n                    cast(null as text) as \"billing_state_code\" ,\n                    cast(null as text) as \"billing_country\" ,\n                    cast(null as text) as \"billing_country_code\" ,\n                    cast(null as text) as \"billing_postal_code\" ,\n                    cast(null as text) as \"inferred_city\" ,\n                    cast(null as text) as \"inferred_state_region\" ,\n                    cast(null as text) as \"inferred_country\" ,\n                    cast(null as text) as \"inferred_postal_code\" ,\n                    cast(null as text) as \"inferred_phone_area_code\" ,\n                    cast(null as text) as \"anonymous_ip\" ,\n                    cast(null as boolean) as \"is_unsubscribed\" ,\n                    cast(null as boolean) as \"is_email_invalid\" ,\n                    cast(null as boolean) as \"do_not_call\" ,\n                    cast(null as boolean) as \"is_deleted\" ,\n                    cast(null as text) as \"merged_into_lead_id\" ,\n                    cast(null as boolean) as \"is_merged\" ,\n                    cast(\"date_day\" as date) as \"date_day\" ,\n                    cast(\"urgency\" as text) as \"urgency\" ,\n                    cast(\"priority\" as text) as \"priority\" ,\n                    cast(\"lead_day_id\" as text) as \"lead_day_id\" \n\n            from change_data\n        )\n\n        \n\n), field_partitions as (\n\n    select\n        coalesce(unioned.date_day, current_date) as valid_to,\n        unioned.date_day,\n        unioned.lead_id\n        \n        \n\n    from unioned\n    left join details\n        on unioned.date_day = details.date_day\n        and unioned.lead_id = details.lead_id\n\n), today as (\n\n    -- For each day where a change occurred for each lead, we backfill the values from the subsequent change, going back in time.\n    -- The 'details' table is joined in for exactly this purpose. It tells us, even if a value is null, whether that null\n    -- value is because no change occurred on that day, or because there was a change and the change involved the null value.\n\n    select \n        field_partitions.valid_to, \n        field_partitions.lead_id\n\n        \n\n    from field_partitions\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(valid_to as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as lead_day_id\n    from today\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_scd\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:47.669729Z", "completed_at": "2024-03-20T21:27:47.673637Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:47.675185Z", "completed_at": "2024-03-20T21:27:47.675196Z"}], "thread_id": "Thread-4", "execution_time": 0.020719289779663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__change_data_scd_lead_day_id.4341b31771", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lead_day_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_scd\"\nwhere lead_day_id is not null\ngroup by lead_day_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:47.665875Z", "completed_at": "2024-03-20T21:27:47.673982Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:47.675565Z", "completed_at": "2024-03-20T21:27:47.675571Z"}], "thread_id": "Thread-7", "execution_time": 0.02232193946838379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__change_data_scd_lead_day_id.cead02fb2e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_day_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_scd\"\nwhere lead_day_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:47.656260Z", "completed_at": "2024-03-20T21:27:48.378317Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:48.378985Z", "completed_at": "2024-03-20T21:27:48.378998Z"}], "thread_id": "Thread-3", "execution_time": 0.7796061038970947, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__lead_history", "compiled": true, "compiled_code": "\n\n\n\nwith change_data as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__change_data_scd\"\n    \n    where valid_to >= (select max(date_day) from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__lead_history\")\n    \n\n), calendar as (\n\n    select *\n    from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__lead_calendar_spine\"\n    where date_day <= current_date\n    \n    and date_day >= (select max(date_day) from \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__lead_history\")\n    \n\n), joined as (\n\n    select \n        calendar.date_day,\n        calendar.lead_id,\n        change_data.lead_id is not null as new_values_present\n        \n    from calendar\n    left join change_data\n        on calendar.lead_id = change_data.lead_id\n        and calendar.date_day = change_data.valid_to\n\n), field_partitions as (\n\n    select\n        date_day,\n        lead_id,\n        new_values_present\n        \n        \n    from joined\n\n), backfill as (\n\n    select\n        date_day,\n        lead_id    \n        -- For each lead on each day, find the state of each column from the next record where a change occurred,\n        -- identified by the presence of a record from the SCD table on that day\n        \n    from field_partitions\n\n), surrogate_key as (\n\n    select \n        *,\n        md5(cast(coalesce(cast(date_day as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as lead_history_id\n    from backfill\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "\"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__lead_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:48.435034Z", "completed_at": "2024-03-20T21:27:48.440970Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:48.448777Z", "completed_at": "2024-03-20T21:27:48.448790Z"}], "thread_id": "Thread-5", "execution_time": 0.01506495475769043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__lead_history_lead_history_id.f9f0bece9c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_history_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__lead_history\"\nwhere lead_history_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:48.441321Z", "completed_at": "2024-03-20T21:27:48.449970Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:48.450801Z", "completed_at": "2024-03-20T21:27:48.450805Z"}], "thread_id": "Thread-8", "execution_time": 0.012389183044433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__lead_history_lead_id.775a15195a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_id\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__lead_history\"\nwhere lead_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-20T21:27:48.444435Z", "completed_at": "2024-03-20T21:27:48.450517Z"}, {"name": "execute", "started_at": "2024-03-20T21:27:48.452170Z", "completed_at": "2024-03-20T21:27:48.452176Z"}], "thread_id": "Thread-1", "execution_time": 0.01310110092163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__lead_history_lead_history_id.f3c93a4f33", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lead_history_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"marketo_integration_tests_56_marketo\".\"marketo__lead_history\"\nwhere lead_history_id is not null\ngroup by lead_history_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 6.847825765609741, "args": {"vars": {}, "empty_catalog": false, "log_level": "info", "show_resource_report": false, "profiles_dir": "/Users/catherinefritz/.dbt", "project_dir": "/Users/catherinefritz/Documents/dbt_packages/marketo/dbt_marketo/integration_tests", "populate_cache": true, "strict_mode": false, "defer": false, "log_file_max_bytes": 10485760, "macro_debugging": false, "which": "generate", "warn_error_options": {"include": [], "exclude": []}, "partial_parse_file_diff": true, "compile": true, "indirect_selection": "eager", "printer_width": 80, "use_colors_file": true, "log_format": "default", "enable_legacy_logger": false, "select": [], "static_parser": true, "use_colors": true, "write_json": true, "log_level_file": "debug", "invocation_command": "dbt docs generate", "introspect": true, "partial_parse": true, "exclude": [], "quiet": false, "static": false, "cache_selected_only": false, "log_format_file": "debug", "version_check": true, "print": true, "log_path": "/Users/catherinefritz/Documents/dbt_packages/marketo/dbt_marketo/integration_tests/logs", "send_anonymous_usage_stats": true, "favor_state": false}}