{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.8", "generated_at": "2024-02-29T15:48:21.847687Z", "invocation_id": "cf599c78-c971-44f2-aa53-c4cbf87e03c5", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.049227Z", "completed_at": "2024-02-29T15:48:15.066403Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.068119Z", "completed_at": "2024-02-29T15:48:15.068139Z"}], "thread_id": "Thread-2", "execution_time": 0.03615117073059082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_change_data_value_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_activity_change_data_value_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_change_data_value_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.055387Z", "completed_at": "2024-02-29T15:48:15.066892Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.068428Z", "completed_at": "2024-02-29T15:48:15.068431Z"}], "thread_id": "Thread-4", "execution_time": 0.035166025161743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_delete_lead_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_activity_delete_lead_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_delete_lead_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.052429Z", "completed_at": "2024-02-29T15:48:15.067823Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.070163Z", "completed_at": "2024-02-29T15:48:15.070167Z"}], "thread_id": "Thread-3", "execution_time": 0.037611961364746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_click_email_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_activity_click_email_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_click_email_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.076651Z", "completed_at": "2024-02-29T15:48:15.082018Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.083368Z", "completed_at": "2024-02-29T15:48:15.083372Z"}], "thread_id": "Thread-4", "execution_time": 0.012193918228149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_email_delivered_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_activity_email_delivered_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_delivered_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.073663Z", "completed_at": "2024-02-29T15:48:15.082299Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.083623Z", "completed_at": "2024-02-29T15:48:15.083626Z"}], "thread_id": "Thread-2", "execution_time": 0.013117790222167969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_email_bounced_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_activity_email_bounced_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_bounced_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.079391Z", "completed_at": "2024-02-29T15:48:15.083100Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.085109Z", "completed_at": "2024-02-29T15:48:15.085113Z"}], "thread_id": "Thread-3", "execution_time": 0.012858867645263672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_merge_leads_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_activity_merge_leads_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_merge_leads_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.088309Z", "completed_at": "2024-02-29T15:48:15.097078Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.097568Z", "completed_at": "2024-02-29T15:48:15.097572Z"}], "thread_id": "Thread-4", "execution_time": 0.011532783508300781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_open_email_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_activity_open_email_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_open_email_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.093549Z", "completed_at": "2024-02-29T15:48:15.098917Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.102643Z", "completed_at": "2024-02-29T15:48:15.102648Z"}], "thread_id": "Thread-3", "execution_time": 0.015467166900634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_unsubscribe_email_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_activity_unsubscribe_email_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_unsubscribe_email_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.090833Z", "completed_at": "2024-02-29T15:48:15.099226Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.102915Z", "completed_at": "2024-02-29T15:48:15.102917Z"}], "thread_id": "Thread-2", "execution_time": 0.017055034637451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_send_email_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_activity_send_email_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_send_email_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.100252Z", "completed_at": "2024-02-29T15:48:15.104535Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.106310Z", "completed_at": "2024-02-29T15:48:15.106313Z"}], "thread_id": "Thread-4", "execution_time": 0.01086282730102539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__email_template_history_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_email_template_history_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__email_template_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.109749Z", "completed_at": "2024-02-29T15:48:15.115268Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.116084Z", "completed_at": "2024-02-29T15:48:15.116089Z"}], "thread_id": "Thread-2", "execution_time": 0.011317968368530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__lead_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_lead_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.106801Z", "completed_at": "2024-02-29T15:48:15.115782Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.117327Z", "completed_at": "2024-02-29T15:48:15.117331Z"}], "thread_id": "Thread-3", "execution_time": 0.013159990310668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__lead_describe_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`marketo_test`.`marketo_lead_describe_data`", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead_describe_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.113251Z", "completed_at": "2024-02-29T15:48:15.116569Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.118608Z", "completed_at": "2024-02-29T15:48:15.118611Z"}], "thread_id": "Thread-4", "execution_time": 0.007100820541381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.marketo.marketo-on-run-start-0", "compiled": true, "compiled_code": "\n\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.120866Z", "completed_at": "2024-02-29T15:48:15.122916Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.125663Z", "completed_at": "2024-02-29T15:48:15.125667Z"}], "thread_id": "Thread-2", "execution_time": 0.009061813354492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_change_data_value_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.124019Z", "completed_at": "2024-02-29T15:48:15.125142Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.128270Z", "completed_at": "2024-02-29T15:48:15.128273Z"}], "thread_id": "Thread-3", "execution_time": 0.00897669792175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_click_email_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.126276Z", "completed_at": "2024-02-29T15:48:15.127463Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.129566Z", "completed_at": "2024-02-29T15:48:15.129569Z"}], "thread_id": "Thread-4", "execution_time": 0.007230043411254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_delete_lead_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.131884Z", "completed_at": "2024-02-29T15:48:15.133065Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.135830Z", "completed_at": "2024-02-29T15:48:15.135833Z"}], "thread_id": "Thread-2", "execution_time": 0.008713960647583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_email_bounced_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.134169Z", "completed_at": "2024-02-29T15:48:15.135350Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.138853Z", "completed_at": "2024-02-29T15:48:15.138857Z"}], "thread_id": "Thread-3", "execution_time": 0.008529901504516602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_email_delivered_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.136287Z", "completed_at": "2024-02-29T15:48:15.138103Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.140030Z", "completed_at": "2024-02-29T15:48:15.140033Z"}], "thread_id": "Thread-4", "execution_time": 0.007606029510498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_merge_leads_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.142284Z", "completed_at": "2024-02-29T15:48:15.143396Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.146027Z", "completed_at": "2024-02-29T15:48:15.146031Z"}], "thread_id": "Thread-2", "execution_time": 0.007714748382568359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_open_email_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.144465Z", "completed_at": "2024-02-29T15:48:15.145551Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.148317Z", "completed_at": "2024-02-29T15:48:15.148320Z"}], "thread_id": "Thread-3", "execution_time": 0.007481098175048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_send_email_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.146501Z", "completed_at": "2024-02-29T15:48:15.147572Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.149492Z", "completed_at": "2024-02-29T15:48:15.149495Z"}], "thread_id": "Thread-4", "execution_time": 0.0066280364990234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_activity_unsubscribe_email_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.151603Z", "completed_at": "2024-02-29T15:48:15.152754Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.156197Z", "completed_at": "2024-02-29T15:48:15.156201Z"}], "thread_id": "Thread-2", "execution_time": 0.008465766906738281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_campaign_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.153851Z", "completed_at": "2024-02-29T15:48:15.155674Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.158504Z", "completed_at": "2024-02-29T15:48:15.158507Z"}], "thread_id": "Thread-3", "execution_time": 0.008341073989868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_email_template_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.156653Z", "completed_at": "2024-02-29T15:48:15.157754Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.159676Z", "completed_at": "2024-02-29T15:48:15.159679Z"}], "thread_id": "Thread-4", "execution_time": 0.007423877716064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_lead_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.161775Z", "completed_at": "2024-02-29T15:48:15.162949Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.165546Z", "completed_at": "2024-02-29T15:48:15.165550Z"}], "thread_id": "Thread-2", "execution_time": 0.008841991424560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_lead_describe_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.164002Z", "completed_at": "2024-02-29T15:48:15.165086Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.169094Z", "completed_at": "2024-02-29T15:48:15.169098Z"}], "thread_id": "Thread-3", "execution_time": 0.009362936019897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.marketo_integration_tests.marketo_program_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.165991Z", "completed_at": "2024-02-29T15:48:15.633862Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.635051Z", "completed_at": "2024-02-29T15:48:15.635069Z"}], "thread_id": "Thread-4", "execution_time": 0.47271084785461426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_change_data_value", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_change_data_value_tmp`\n\n), macro as (\n\n    select \n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    api_method_name\n    \n as \n    \n    api_method_name\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    modifying_user\n    \n as \n    \n    modifying_user\n    \n, \n    \n    \n    new_value\n    \n as \n    \n    new_value\n    \n, \n    \n    \n    old_value\n    \n as \n    \n    old_value\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    request_id\n    \n as \n    \n    request_id\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        api_method_name,\n        campaign_id,\n        id as activity_id,\n        lead_id,\n        modifying_user as modifying_user_id,\n        new_value,\n        old_value,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        reason as change_reason,\n        request_id,\n        source as change_source\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_change_data_value`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.177639Z", "completed_at": "2024-02-29T15:48:15.711896Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.712712Z", "completed_at": "2024-02-29T15:48:15.712721Z"}], "thread_id": "Thread-3", "execution_time": 0.5412287712097168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_click_email", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_click_email_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    device\n    \n as \n    \n    device\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_mobile_device\n    \n as \n    \n    is_mobile_device\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    link\n    \n as \n    \n    link\n    \n, \n    cast(null as string) as \n    \n    link_id\n    \n , \n    \n    \n    platform\n    \n as \n    \n    platform\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n, \n    cast(null as INT64) as \n    \n    test_variant\n    \n , \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        choice_number,\n        device as click_device,\n        email_template_id,\n        id as activity_id,\n        is_mobile_device,\n        lead_id,\n        link as click_link_url,\n        platform as user_platform,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id,\n        user_agent\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(primary_attribute_value_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') as string))) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_click_email`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.172786Z", "completed_at": "2024-02-29T15:48:15.729307Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:15.730109Z", "completed_at": "2024-02-29T15:48:15.730115Z"}], "thread_id": "Thread-2", "execution_time": 0.5598101615905762, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_delete_lead", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_delete_lead_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign\n    \n as \n    \n    campaign\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        id as activity_id,\n        _fivetran_synced,\n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign as campaign_name,\n        campaign_id,\n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_delete_lead`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.639031Z", "completed_at": "2024-02-29T15:48:16.199448Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:16.200581Z", "completed_at": "2024-02-29T15:48:16.200599Z"}], "thread_id": "Thread-4", "execution_time": 0.5639972686767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_email_delivered", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_delivered_tmp`\n\n), macro as (\n\n    select \n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n, \n    cast(null as INT64) as \n    \n    test_variant\n    \n \n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        choice_number,\n        email_template_id,\n        id as activity_id, \n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(primary_attribute_value_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') as string))) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_delivered`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.732293Z", "completed_at": "2024-02-29T15:48:16.224774Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:16.225513Z", "completed_at": "2024-02-29T15:48:16.225520Z"}], "thread_id": "Thread-2", "execution_time": 0.49468231201171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_merge_leads", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_merge_leads_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    master_updated\n    \n as \n    \n    master_updated\n    \n, \n    \n    \n    merge_ids\n    \n as \n    \n    merge_ids\n    \n, \n    \n    \n    merge_source\n    \n as \n    \n    merge_source\n    \n, \n    \n    \n    merged_in_sales\n    \n as \n    \n    merged_in_sales\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        id as activity_id,\n        _fivetran_synced,\n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        cast(lead_id as INT64) as lead_id,\n        master_updated,\n        cast(replace(trim(trim(merge_ids,']'),'['), ',', ', ') as string) as merged_lead_id,\n        merge_source,\n        merged_in_sales,\n        primary_attribute_value,\n        primary_attribute_value_id\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_merge_leads`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.715689Z", "completed_at": "2024-02-29T15:48:16.305393Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:16.306060Z", "completed_at": "2024-02-29T15:48:16.306067Z"}], "thread_id": "Thread-3", "execution_time": 0.5922927856445312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_email_bounced", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_bounced_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    cast(null as INT64) as \n    \n    test_variant\n    \n \n\n\n    from base\n\n), fields as (\n\n    select \t\n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        category as bounce_category,\n        choice_number,\n        details,\n        email as email_address,\n        email_template_id,\n        id as activity_id,\n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id,\n        subcategory as bounce_subcategory\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(primary_attribute_value_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') as string))) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_bounced`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:16.204190Z", "completed_at": "2024-02-29T15:48:16.756182Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:16.757019Z", "completed_at": "2024-02-29T15:48:16.757028Z"}], "thread_id": "Thread-4", "execution_time": 0.5549108982086182, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_open_email", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_open_email_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    device\n    \n as \n    \n    device\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_mobile_device\n    \n as \n    \n    is_mobile_device\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    platform\n    \n as \n    \n    platform\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n, \n    cast(null as INT64) as \n    \n    test_variant\n    \n , \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        choice_number,\n        device,\n        email_template_id,\n        id as activity_id,\n        is_mobile_device,\n        lead_id,\n        platform,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id,\n        user_agent\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(primary_attribute_value_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') as string))) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_open_email`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:16.227862Z", "completed_at": "2024-02-29T15:48:16.796585Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:16.797242Z", "completed_at": "2024-02-29T15:48:16.797249Z"}], "thread_id": "Thread-2", "execution_time": 0.5708520412445068, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_unsubscribe_email", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_unsubscribe_email_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    client_ip_address\n    \n as \n    \n    client_ip_address\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    form_fields\n    \n as \n    \n    form_fields\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    query_parameters\n    \n as \n    \n    query_parameters\n    \n, \n    \n    \n    referrer_url\n    \n as \n    \n    referrer_url\n    \n, \n    cast(null as INT64) as \n    \n    test_variant\n    \n , \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n, \n    \n    \n    webform_id\n    \n as \n    \n    webform_id\n    \n, \n    \n    \n    webpage_id\n    \n as \n    \n    webpage_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \t\n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        client_ip_address,\n        email_template_id,\n        form_fields,\n        id as activity_id,\n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        query_parameters,\n        referrer_url,\n        user_agent,\n        webform_id,\n        webpage_id\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(primary_attribute_value_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') as string))) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_unsubscribe_email`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:16.308306Z", "completed_at": "2024-02-29T15:48:16.908897Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:16.909628Z", "completed_at": "2024-02-29T15:48:16.909636Z"}], "thread_id": "Thread-3", "execution_time": 0.6026828289031982, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__activity_send_email", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_send_email_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_type_id\n    \n as \n    \n    activity_type_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_run_id\n    \n as \n    \n    campaign_run_id\n    \n, \n    \n    \n    choice_number\n    \n as \n    \n    choice_number\n    \n, \n    \n    \n    email_template_id\n    \n as \n    \n    email_template_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    lead_id\n    \n as \n    \n    lead_id\n    \n, \n    \n    \n    primary_attribute_value\n    \n as \n    \n    primary_attribute_value\n    \n, \n    \n    \n    primary_attribute_value_id\n    \n as \n    \n    primary_attribute_value_id\n    \n, \n    \n    \n    step_id\n    \n as \n    \n    step_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        cast(activity_date as timestamp) as activity_timestamp,\n        activity_type_id,\n        campaign_id,\n        campaign_run_id,\n        choice_number,\n        email_template_id,\n        id as activity_id,\n        lead_id,\n        primary_attribute_value,\n        primary_attribute_value_id,\n        step_id\n\n        \n\n\n\n\n\n    from macro\n\n), surrogate as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(primary_attribute_value_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_run_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') as string))) as email_send_id\n    from fields\n\n)\n\nselect *\nfrom surrogate", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_send_email`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:16.759839Z", "completed_at": "2024-02-29T15:48:17.274598Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.275598Z", "completed_at": "2024-02-29T15:48:17.275615Z"}], "thread_id": "Thread-4", "execution_time": 0.5177769660949707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__email_template_history", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__email_template_history_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    folder_folder_name\n    \n as \n    \n    folder_folder_name\n    \n, \n    \n    \n    folder_id\n    \n as \n    \n    folder_id\n    \n, \n    \n    \n    folder_type\n    \n as \n    \n    folder_type\n    \n, \n    \n    \n    folder_value\n    \n as \n    \n    folder_value\n    \n, \n    \n    \n    from_email\n    \n as \n    \n    from_email\n    \n, \n    \n    \n    from_name\n    \n as \n    \n    from_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    operational\n    \n as \n    \n    operational\n    \n, \n    \n    \n    program_id\n    \n as \n    \n    program_id\n    \n, \n    \n    \n    publish_to_msi\n    \n as \n    \n    publish_to_msi\n    \n, \n    \n    \n    reply_email\n    \n as \n    \n    reply_email\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    template\n    \n as \n    \n    template\n    \n, \n    \n    \n    text_only\n    \n as \n    \n    text_only\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    version\n    \n as \n    \n    version\n    \n, \n    \n    \n    web_view\n    \n as \n    \n    web_view\n    \n, \n    \n    \n    workspace\n    \n as \n    \n    workspace\n    \n\n\n\n    from base\n\n), fields as (\n\n    select \n        created_at as created_timestamp,\n        description,\n        folder_folder_name as folder_name,\n        folder_id,\n        folder_type,\n        folder_value,\n        from_email,\n        from_name,\n        id as email_template_id,\n        name as email_template_name,\n        operational as is_operational,\n        program_id,\n        publish_to_msi,\n        reply_email,\n        status as email_template_status,\n        subject as email_subject,\n        template as parent_template_id,\n        text_only as is_text_only,\n        updated_at as updated_timestamp,\n        url as email_template_url,\n        version as version_type,\n        web_view as has_web_view_enabled,\n        workspace as workspace_name\n    from macro\n\n), versions as (\n\n    select  \n        *,\n        row_number() over (partition by email_template_id order by updated_timestamp) as inferred_version,\n        count(*) over (partition by email_template_id) as total_count_of_versions\n    from fields\n\n), valid as (\n\n    select \n        *, \n        case\n            when inferred_version = 1 then created_timestamp\n            else updated_timestamp\n        end as valid_from,\n        lead(updated_timestamp) over (partition by email_template_id order by updated_timestamp) as valid_to,\n        inferred_version = total_count_of_versions as is_most_recent_version\n    from versions\n\n), surrogate_key as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(email_template_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(inferred_version as string), '_dbt_utils_surrogate_key_null_') as string))) as email_template_history_id\n    from valid\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__email_template_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.279126Z", "completed_at": "2024-02-29T15:48:17.293327Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.294037Z", "completed_at": "2024-02-29T15:48:17.294043Z"}], "thread_id": "Thread-4", "execution_time": 0.016889095306396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_change_data_value_activity_id.8ae060d108", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_change_data_value`\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.296379Z", "completed_at": "2024-02-29T15:48:17.301940Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.302567Z", "completed_at": "2024-02-29T15:48:17.302573Z"}], "thread_id": "Thread-4", "execution_time": 0.007642030715942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_change_data_value_activity_id.7c7047bbcd", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select activity_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_change_data_value`\n  where activity_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.309940Z", "completed_at": "2024-02-29T15:48:17.313481Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.314039Z", "completed_at": "2024-02-29T15:48:17.314043Z"}], "thread_id": "Thread-4", "execution_time": 0.0054378509521484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_click_email_activity_id.8e4b4af9fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_click_email`\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.315870Z", "completed_at": "2024-02-29T15:48:17.319283Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.319802Z", "completed_at": "2024-02-29T15:48:17.319806Z"}], "thread_id": "Thread-4", "execution_time": 0.005056858062744141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_click_email_activity_id.6c599791a0", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select activity_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_click_email`\n  where activity_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.339150Z", "completed_at": "2024-02-29T15:48:17.342586Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.343079Z", "completed_at": "2024-02-29T15:48:17.343084Z"}], "thread_id": "Thread-4", "execution_time": 0.01719498634338379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_email_delivered_activity_id.138e450885", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_delivered`\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.344919Z", "completed_at": "2024-02-29T15:48:17.347985Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.348535Z", "completed_at": "2024-02-29T15:48:17.348539Z"}], "thread_id": "Thread-4", "execution_time": 0.004786014556884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_email_delivered_activity_id.6f715c1b87", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select activity_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_delivered`\n  where activity_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.354838Z", "completed_at": "2024-02-29T15:48:17.357861Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.358347Z", "completed_at": "2024-02-29T15:48:17.358351Z"}], "thread_id": "Thread-4", "execution_time": 0.004555702209472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_email_bounced_activity_id.578b8cddf2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_bounced`\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.359942Z", "completed_at": "2024-02-29T15:48:17.362799Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.363278Z", "completed_at": "2024-02-29T15:48:17.363282Z"}], "thread_id": "Thread-4", "execution_time": 0.004343986511230469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_email_bounced_activity_id.28833155c3", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select activity_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_bounced`\n  where activity_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.368937Z", "completed_at": "2024-02-29T15:48:17.371862Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.372347Z", "completed_at": "2024-02-29T15:48:17.372351Z"}], "thread_id": "Thread-4", "execution_time": 0.0044422149658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_open_email_activity_id.72e7514396", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_open_email`\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.373897Z", "completed_at": "2024-02-29T15:48:17.377408Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.377889Z", "completed_at": "2024-02-29T15:48:17.377892Z"}], "thread_id": "Thread-4", "execution_time": 0.004989147186279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_open_email_activity_id.d48e7e93e6", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select activity_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_open_email`\n  where activity_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.383532Z", "completed_at": "2024-02-29T15:48:17.386490Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.386973Z", "completed_at": "2024-02-29T15:48:17.386976Z"}], "thread_id": "Thread-4", "execution_time": 0.004438877105712891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_unsubscribe_email_activity_id.a31edf42c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_unsubscribe_email`\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.388539Z", "completed_at": "2024-02-29T15:48:17.391499Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.391981Z", "completed_at": "2024-02-29T15:48:17.391985Z"}], "thread_id": "Thread-4", "execution_time": 0.0044460296630859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_unsubscribe_email_activity_id.a3bca07e06", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select activity_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_unsubscribe_email`\n  where activity_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.397562Z", "completed_at": "2024-02-29T15:48:17.401178Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.401667Z", "completed_at": "2024-02-29T15:48:17.401671Z"}], "thread_id": "Thread-4", "execution_time": 0.0051419734954833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__activity_send_email_activity_id.4eaf534bc8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_send_email`\nwhere activity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.403204Z", "completed_at": "2024-02-29T15:48:17.406122Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.406590Z", "completed_at": "2024-02-29T15:48:17.406594Z"}], "thread_id": "Thread-4", "execution_time": 0.004364013671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__activity_send_email_activity_id.bd25ee45d1", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select activity_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_send_email`\n  where activity_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.408130Z", "completed_at": "2024-02-29T15:48:17.411163Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.411642Z", "completed_at": "2024-02-29T15:48:17.411645Z"}], "thread_id": "Thread-4", "execution_time": 0.004498958587646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__email_template_history_email_template_history_id.dcab273dfa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect email_template_history_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__email_template_history`\nwhere email_template_history_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.413189Z", "completed_at": "2024-02-29T15:48:17.417161Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.417744Z", "completed_at": "2024-02-29T15:48:17.417749Z"}], "thread_id": "Thread-4", "execution_time": 0.0055849552154541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__email_template_history_email_template_history_id.7e3c0524e2", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select email_template_history_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__email_template_history`\n  where email_template_history_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.419538Z", "completed_at": "2024-02-29T15:48:17.423316Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.423880Z", "completed_at": "2024-02-29T15:48:17.423885Z"}], "thread_id": "Thread-4", "execution_time": 0.005560874938964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__clicks__by_sent_email_email_send_id.9bac4f36a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__clicks__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_click_email`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_clicks\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__clicks__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.425585Z", "completed_at": "2024-02-29T15:48:17.430794Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.431284Z", "completed_at": "2024-02-29T15:48:17.431288Z"}], "thread_id": "Thread-4", "execution_time": 0.006783962249755859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__clicks__by_sent_email_email_send_id.cae3e572a1", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__marketo__clicks__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_click_email`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_clicks\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n), dbt_test__target as (\n\n  select email_send_id as unique_field\n  from __dbt__cte__marketo__clicks__by_sent_email\n  where email_send_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.432842Z", "completed_at": "2024-02-29T15:48:17.436396Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.436881Z", "completed_at": "2024-02-29T15:48:17.436885Z"}], "thread_id": "Thread-4", "execution_time": 0.00504302978515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__deliveries__by_sent_email_email_send_id.e4b5864b9e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__deliveries__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_delivered`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_deliveries\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__deliveries__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.438446Z", "completed_at": "2024-02-29T15:48:17.442979Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.443456Z", "completed_at": "2024-02-29T15:48:17.443460Z"}], "thread_id": "Thread-4", "execution_time": 0.006011009216308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__deliveries__by_sent_email_email_send_id.f839cd9d44", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__marketo__deliveries__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_delivered`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_deliveries\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n), dbt_test__target as (\n\n  select email_send_id as unique_field\n  from __dbt__cte__marketo__deliveries__by_sent_email\n  where email_send_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.445019Z", "completed_at": "2024-02-29T15:48:17.448609Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.449083Z", "completed_at": "2024-02-29T15:48:17.449087Z"}], "thread_id": "Thread-4", "execution_time": 0.0050580501556396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__bounces__by_sent_email_email_send_id.836589be03", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__bounces__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_bounced`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_bounces\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__bounces__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.450633Z", "completed_at": "2024-02-29T15:48:17.454988Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.455483Z", "completed_at": "2024-02-29T15:48:17.455487Z"}], "thread_id": "Thread-4", "execution_time": 0.0058460235595703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__bounces__by_sent_email_email_send_id.0936aa5b73", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__marketo__bounces__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_bounced`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_bounces\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n), dbt_test__target as (\n\n  select email_send_id as unique_field\n  from __dbt__cte__marketo__bounces__by_sent_email\n  where email_send_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.457035Z", "completed_at": "2024-02-29T15:48:17.461261Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.461734Z", "completed_at": "2024-02-29T15:48:17.461738Z"}], "thread_id": "Thread-4", "execution_time": 0.0056841373443603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__opens__by_sent_email_email_send_id.6740510a69", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__opens__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_open_email`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_opens\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__opens__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.463259Z", "completed_at": "2024-02-29T15:48:17.467675Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.468161Z", "completed_at": "2024-02-29T15:48:17.468165Z"}], "thread_id": "Thread-4", "execution_time": 0.005890846252441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__opens__by_sent_email_email_send_id.6e4b7ff601", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__marketo__opens__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_open_email`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_opens\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n), dbt_test__target as (\n\n  select email_send_id as unique_field\n  from __dbt__cte__marketo__opens__by_sent_email\n  where email_send_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.469723Z", "completed_at": "2024-02-29T15:48:17.473100Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.473576Z", "completed_at": "2024-02-29T15:48:17.473579Z"}], "thread_id": "Thread-4", "execution_time": 0.00484776496887207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__unsubscribes__by_sent_email_email_send_id.feccee3d32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__unsubscribes__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_unsubscribe_email`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_unsubscribes\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n) select email_send_id\nfrom __dbt__cte__marketo__unsubscribes__by_sent_email\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.475117Z", "completed_at": "2024-02-29T15:48:17.479514Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.479985Z", "completed_at": "2024-02-29T15:48:17.479989Z"}], "thread_id": "Thread-4", "execution_time": 0.005852222442626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__unsubscribes__by_sent_email_email_send_id.ecc7407ca9", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__marketo__unsubscribes__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_unsubscribe_email`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_unsubscribes\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n), dbt_test__target as (\n\n  select email_send_id as unique_field\n  from __dbt__cte__marketo__unsubscribes__by_sent_email\n  where email_send_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.481568Z", "completed_at": "2024-02-29T15:48:17.498570Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.499056Z", "completed_at": "2024-02-29T15:48:17.499062Z"}], "thread_id": "Thread-4", "execution_time": 0.01852726936340332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__email_sends", "compiled": true, "compiled_code": "with  __dbt__cte__marketo__email_sends_deduped as (\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_send_email`\n\n), windowed as (\n\n    select \n        *,\n        row_number() over (partition by email_send_id order by activity_timestamp asc) as activity_rank\n    from base\n\n), filtered as (\n\n    select *\n    from windowed\n    where activity_rank = 1\n\n)\n\nselect *\nfrom filtered\n),  __dbt__cte__marketo__opens__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_open_email`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_opens\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n),  __dbt__cte__marketo__bounces__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_bounced`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_bounces\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n),  __dbt__cte__marketo__clicks__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_click_email`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_clicks\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n),  __dbt__cte__marketo__deliveries__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_email_delivered`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_deliveries\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n),  __dbt__cte__marketo__unsubscribes__by_sent_email as (\nwith activity as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_unsubscribe_email`\n\n), aggregate as (\n\n    select \n        email_send_id,\n        count(*) as count_unsubscribes\n    from activity\n    group by 1\n\n)\n\nselect * \nfrom aggregate\n), sends as (\n\n    select *\n    from __dbt__cte__marketo__email_sends_deduped\n\n), opens as (\n\n    select *\n    from __dbt__cte__marketo__opens__by_sent_email\n\n), bounces as (\n\n    select *\n    from __dbt__cte__marketo__bounces__by_sent_email\n\n), clicks as (\n\n    select *\n    from __dbt__cte__marketo__clicks__by_sent_email\n\n), deliveries as (\n\n    select *\n    from __dbt__cte__marketo__deliveries__by_sent_email\n\n), unsubscribes as (\n\n    select *\n    from __dbt__cte__marketo__unsubscribes__by_sent_email\n\n\n\n), email_templates as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__email_template_history`\n\n), metrics as (\n\n    select\n        sends.*,\n        coalesce(opens.count_opens, 0) as count_opens,\n        coalesce(bounces.count_bounces, 0) as count_bounces,\n        coalesce(clicks.count_clicks, 0) as count_clicks,\n        coalesce(deliveries.count_deliveries, 0) as count_deliveries,\n        coalesce(unsubscribes.count_unsubscribes, 0) as count_unsubscribes\n    from sends\n    left join opens using (email_send_id)\n    left join bounces using (email_send_id)\n    left join clicks using (email_send_id)\n    left join deliveries using (email_send_id)\n    left join unsubscribes using (email_send_id)\n\n), booleans as (\n\n    select\n        *,\n        count_opens > 0 as was_opened,\n        count_bounces > 0 as was_bounced,\n        count_clicks > 0 as was_clicked,\n        count_deliveries > 0 as was_delivered,\n        count_unsubscribes > 0 as was_unsubscribed\n    from metrics\n\n), joined as (\n\n    select \n        booleans.*,\n        \n        email_templates.is_operational\n    from booleans\n    \n    left join email_templates\n        on booleans.email_template_id = email_templates.email_template_id\n        and booleans.activity_timestamp \n            between email_templates.valid_from\n            and coalesce(email_templates.valid_to, cast('2099-01-01' as timestamp))\n\n)\n\nselect *\nfrom joined", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`marketo__email_sends`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:16.911359Z", "completed_at": "2024-02-29T15:48:17.504243Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.504894Z", "completed_at": "2024-02-29T15:48:17.504898Z"}], "thread_id": "Thread-3", "execution_time": 0.5946130752563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__lead_describe", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead_describe_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    data_type\n    \n as \n    \n    data_type\n    \n, \n    \n    \n    display_name\n    \n as \n    \n    display_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    length\n    \n as \n    \n    length\n    \n, \n    \n    \n    restname\n    \n as \n    \n    restname\n    \n, \n    \n    \n    restread_only\n    \n as \n    \n    restread_only\n    \n, \n    \n    \n    soapname\n    \n as \n    \n    soapname\n    \n, \n    \n    \n    soapread_only\n    \n as \n    \n    soapread_only\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        data_type,\n        display_name,\n        id as lead_describe_id,\n        length as field_max_length,\n        restname as rest_name,\n        restread_only as is_rest_readonly,\n        soapname as soap_name,\n        soapread_only as is_soap_readonly\n    from macro\n\n), regex as (\n\n    select \n        *,\n        case\n            when rest_name like '%\\\\_\\\\_c%' then lower(rest_name)\n            else ltrim(lower(regexp_replace(rest_name, '[A-Z]','_\\\\0')),'_')\n        end as rest_name_xf\n    from fields\n\n)\n\nselect *\nfrom regex", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead_describe`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.500652Z", "completed_at": "2024-02-29T15:48:17.505918Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.507137Z", "completed_at": "2024-02-29T15:48:17.507141Z"}], "thread_id": "Thread-4", "execution_time": 0.01188802719116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_sends_deduped_email_send_id.9ad849d3a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__email_sends_deduped as (\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_send_email`\n\n), windowed as (\n\n    select \n        *,\n        row_number() over (partition by email_send_id order by activity_timestamp asc) as activity_rank\n    from base\n\n), filtered as (\n\n    select *\n    from windowed\n    where activity_rank = 1\n\n)\n\nselect *\nfrom filtered\n) select email_send_id\nfrom __dbt__cte__marketo__email_sends_deduped\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.507401Z", "completed_at": "2024-02-29T15:48:17.515247Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.515751Z", "completed_at": "2024-02-29T15:48:17.515755Z"}], "thread_id": "Thread-3", "execution_time": 0.009991168975830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_sends_deduped_email_send_id.39a96fd954", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__marketo__email_sends_deduped as (\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_send_email`\n\n), windowed as (\n\n    select \n        *,\n        row_number() over (partition by email_send_id order by activity_timestamp asc) as activity_rank\n    from base\n\n), filtered as (\n\n    select *\n    from windowed\n    where activity_rank = 1\n\n)\n\nselect *\nfrom filtered\n), dbt_test__target as (\n\n  select email_send_id as unique_field\n  from __dbt__cte__marketo__email_sends_deduped\n  where email_send_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.521805Z", "completed_at": "2024-02-29T15:48:17.526324Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.529629Z", "completed_at": "2024-02-29T15:48:17.529634Z"}], "thread_id": "Thread-4", "execution_time": 0.008932828903198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_sends_email_send_id.2ad799df7a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect email_send_id\nfrom `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_sends`\nwhere email_send_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.526568Z", "completed_at": "2024-02-29T15:48:17.537605Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.538403Z", "completed_at": "2024-02-29T15:48:17.538407Z"}], "thread_id": "Thread-3", "execution_time": 0.013347864151000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_sends_email_send_id.f2367cb085", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select email_send_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_sends`\n  where email_send_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:16.799536Z", "completed_at": "2024-02-29T15:48:17.817867Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.819826Z", "completed_at": "2024-02-29T15:48:17.819855Z"}], "thread_id": "Thread-2", "execution_time": 1.0227649211883545, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo_source.stg_marketo__lead", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    created_at\n    \n as created_timestamp , \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    id\n    \n as lead_id , \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    updated_at\n    \n as updated_timestamp , \n    cast(null as string) as \n    \n    phone\n    \n , \n    cast(null as string) as \n    \n    main_phone\n    \n , \n    cast(null as string) as \n    \n    mobile_phone\n    \n , \n    cast(null as string) as \n    \n    company\n    \n , \n    cast(null as string) as \n    \n    inferred_company\n    \n , \n    cast(null as string) as \n    \n    address_lead\n    \n , \n    cast(null as string) as \n    \n    address\n    \n , \n    cast(null as string) as \n    \n    city\n    \n , \n    cast(null as string) as \n    \n    state\n    \n , \n    cast(null as string) as \n    \n    state_code\n    \n , \n    cast(null as string) as \n    \n    country\n    \n , \n    cast(null as string) as \n    \n    country_code\n    \n , \n    cast(null as string) as \n    \n    postal_code\n    \n , \n    cast(null as string) as \n    \n    billing_street\n    \n , \n    cast(null as string) as \n    \n    billing_city\n    \n , \n    cast(null as string) as \n    \n    billing_state\n    \n , \n    cast(null as string) as \n    \n    billing_state_code\n    \n , \n    cast(null as string) as \n    \n    billing_country\n    \n , \n    cast(null as string) as \n    \n    billing_country_code\n    \n , \n    cast(null as string) as \n    \n    billing_postal_code\n    \n , \n    cast(null as string) as \n    \n    inferred_city\n    \n , \n    cast(null as string) as \n    \n    inferred_state_region\n    \n , \n    cast(null as string) as \n    \n    inferred_country\n    \n , \n    cast(null as string) as \n    \n    inferred_postal_code\n    \n , \n    cast(null as string) as \n    \n    inferred_phone_area_code\n    \n , \n    cast(null as string) as \n    \n    anonymous_ip\n    \n , \n    cast(null as boolean) as is_unsubscribed , \n    cast(null as boolean) as is_email_invalid , \n    cast(null as boolean) as \n    \n    do_not_call\n    \n \n\n\n        -- This will check if there are non-default columns to bring in\n        \n        \n        \n        \n        \n    from base\n\n)\n\nselect *\nfrom macro", "relation_name": "`dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.824851Z", "completed_at": "2024-02-29T15:48:17.836296Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.837215Z", "completed_at": "2024-02-29T15:48:17.837225Z"}], "thread_id": "Thread-2", "execution_time": 0.015070915222167969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__lead_describe_lead_describe_id.37612f6879", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_describe_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead_describe`\nwhere lead_describe_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.840151Z", "completed_at": "2024-02-29T15:48:17.845374Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.846137Z", "completed_at": "2024-02-29T15:48:17.846143Z"}], "thread_id": "Thread-2", "execution_time": 0.007716655731201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__lead_describe_lead_describe_id.4f0a7f9cc1", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select lead_describe_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead_describe`\n  where lead_describe_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.848631Z", "completed_at": "2024-02-29T15:48:17.859715Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.860331Z", "completed_at": "2024-02-29T15:48:17.860336Z"}], "thread_id": "Thread-2", "execution_time": 0.013189315795898438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__email_templates", "compiled": true, "compiled_code": "with  __dbt__cte__marketo__email_stats__by_email_template as (\nwith email_sends as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_sends`\n\n), aggregated as (\n\n    select\n        email_template_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where email_template_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n), email_templates as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__email_template_history`\n    where is_most_recent_version = True\n\n), email_stats as (\n\n    select *\n    from __dbt__cte__marketo__email_stats__by_email_template\n\n), joined as (\n\n    select\n        email_templates.*,\n        coalesce(email_stats.count_sends, 0) as count_sends,\n        coalesce(email_stats.count_opens, 0) as count_opens,\n        coalesce(email_stats.count_bounces, 0) as count_bounces,\n        coalesce(email_stats.count_clicks, 0) as count_clicks,\n        coalesce(email_stats.count_deliveries, 0) as count_deliveries,\n        coalesce(email_stats.count_unsubscribes, 0) as count_unsubscribes,\n        coalesce(email_stats.count_unique_opens, 0) as count_unique_opens,\n        coalesce(email_stats.count_unique_clicks, 0) as count_unique_clicks\n    from email_templates\n    left join email_stats\n        using (email_template_id)\n\n)\n\nselect *\nfrom joined", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`marketo__email_templates`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.862484Z", "completed_at": "2024-02-29T15:48:17.867296Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.867919Z", "completed_at": "2024-02-29T15:48:17.867924Z"}], "thread_id": "Thread-2", "execution_time": 0.006850242614746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_stats__by_email_template_email_template_id.dbce7d06c1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__email_stats__by_email_template as (\nwith email_sends as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_sends`\n\n), aggregated as (\n\n    select\n        email_template_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where email_template_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n) select email_template_id\nfrom __dbt__cte__marketo__email_stats__by_email_template\nwhere email_template_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.869885Z", "completed_at": "2024-02-29T15:48:17.876249Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.876811Z", "completed_at": "2024-02-29T15:48:17.876815Z"}], "thread_id": "Thread-2", "execution_time": 0.008114099502563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_stats__by_email_template_email_template_id.e3f8e60505", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__marketo__email_stats__by_email_template as (\nwith email_sends as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_sends`\n\n), aggregated as (\n\n    select\n        email_template_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where email_template_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n), dbt_test__target as (\n\n  select email_template_id as unique_field\n  from __dbt__cte__marketo__email_stats__by_email_template\n  where email_template_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.878657Z", "completed_at": "2024-02-29T15:48:17.947629Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.948123Z", "completed_at": "2024-02-29T15:48:17.948129Z"}], "thread_id": "Thread-2", "execution_time": 0.07058477401733398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_stats__by_lead_lead_id.45cb4697f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__marketo__email_stats__by_lead as (\nwith email_sends as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_sends`\n\n), aggregated as (\n\n    select\n        lead_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where lead_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n) select lead_id\nfrom __dbt__cte__marketo__email_stats__by_lead\nwhere lead_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.949757Z", "completed_at": "2024-02-29T15:48:17.954236Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.954704Z", "completed_at": "2024-02-29T15:48:17.954708Z"}], "thread_id": "Thread-2", "execution_time": 0.005942821502685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_stats__by_lead_lead_id.aae36042a7", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__marketo__email_stats__by_lead as (\nwith email_sends as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_sends`\n\n), aggregated as (\n\n    select\n        lead_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where lead_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n), dbt_test__target as (\n\n  select lead_id as unique_field\n  from __dbt__cte__marketo__email_stats__by_lead\n  where lead_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.956242Z", "completed_at": "2024-02-29T15:48:17.961198Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.961671Z", "completed_at": "2024-02-29T15:48:17.961675Z"}], "thread_id": "Thread-2", "execution_time": 0.0064351558685302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.int_marketo__lead", "compiled": true, "compiled_code": "\n\nwith leads as(\n    select * \n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead`\n\n), activity_merge_leads as (\n    select * \n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_merge_leads`\n\n), unique_merges as (\n\n    select \n        cast(lead_id as INT64) as lead_id,\n        \n    string_agg(distinct merged_lead_id, ', ')\n\n as merged_into_lead_id\n\n    from activity_merge_leads\n    group by 1 \n\n/*If you do not use the activity_delete_lead table, set var marketo__activity_delete_lead_enabled \nto False. Default is True*/\n\n), deleted_leads as (\n\n    select distinct lead_id\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_delete_lead`\n    \n\n\n), joined as (\n\n    select \n        leads.*,\n\n        /*If you do not use the activity_delete_lead table, set var marketo__activity_delete_lead_enabled \n        to False. Default is True*/\n        \n        case when deleted_leads.lead_id is not null then True else False end as is_deleted,\n        \n\n        unique_merges.merged_into_lead_id,\n        case when unique_merges.merged_into_lead_id is not null then True else False end as is_merged\n    from leads\n\n    /*If you do not use the activity_delete_lead table, set var marketo__activity_delete_lead_enabled \n    to False. Default is True*/\n    \n    left join deleted_leads on leads.lead_id = deleted_leads.lead_id\n    \n\n    left join unique_merges on leads.lead_id = unique_merges.lead_id \n)\n\nselect *\nfrom joined", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`int_marketo__lead`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.963272Z", "completed_at": "2024-02-29T15:48:17.966411Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.966894Z", "completed_at": "2024-02-29T15:48:17.966897Z"}], "thread_id": "Thread-2", "execution_time": 0.004652976989746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.not_null_stg_marketo__lead_lead_id.a539cbf055", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_id\nfrom `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead`\nwhere lead_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.968435Z", "completed_at": "2024-02-29T15:48:17.971994Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.972470Z", "completed_at": "2024-02-29T15:48:17.972474Z"}], "thread_id": "Thread-2", "execution_time": 0.005012035369873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo_source.unique_stg_marketo__lead_lead_id.1a4c20db9f", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select lead_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead`\n  where lead_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.974015Z", "completed_at": "2024-02-29T15:48:17.977227Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.977694Z", "completed_at": "2024-02-29T15:48:17.977698Z"}], "thread_id": "Thread-2", "execution_time": 0.00469207763671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__email_templates_email_template_id.3b92bfe332", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect email_template_id\nfrom `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_templates`\nwhere email_template_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.979238Z", "completed_at": "2024-02-29T15:48:17.982111Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.982579Z", "completed_at": "2024-02-29T15:48:17.982582Z"}], "thread_id": "Thread-2", "execution_time": 0.004327058792114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__email_templates_email_template_id.82812ecfe8", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select email_template_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_templates`\n  where email_template_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.984095Z", "completed_at": "2024-02-29T15:48:17.990961Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.991425Z", "completed_at": "2024-02-29T15:48:17.991429Z"}], "thread_id": "Thread-2", "execution_time": 0.008305072784423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__leads", "compiled": true, "compiled_code": "with  __dbt__cte__marketo__email_stats__by_lead as (\nwith email_sends as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__email_sends`\n\n), aggregated as (\n\n    select\n        lead_id,\n        count(*) as count_sends,\n        sum(count_opens) as count_opens,\n        sum(count_bounces) as count_bounces,\n        sum(count_clicks) as count_clicks,\n        sum(count_deliveries) as count_deliveries,\n        sum(count_unsubscribes) as count_unsubscribes,\n        count(distinct case when was_opened = True then email_send_id end) as count_unique_opens,\n        count(distinct case when was_clicked = True then email_send_id end) as count_unique_clicks\n    from email_sends\n    where lead_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregated\n), leads as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`int_marketo__lead`\n\n), email_stats as (\n\n    select *\n    from __dbt__cte__marketo__email_stats__by_lead\n\n), joined as (\n\n    select\n        leads.*,\n        coalesce(email_stats.count_sends, 0) as count_sends,\n        coalesce(email_stats.count_opens, 0) as count_opens,\n        coalesce(email_stats.count_bounces, 0) as count_bounces,\n        coalesce(email_stats.count_clicks, 0) as count_clicks,\n        coalesce(email_stats.count_deliveries, 0) as count_deliveries,\n        coalesce(email_stats.count_unsubscribes, 0) as count_unsubscribes,\n        coalesce(email_stats.count_unique_opens, 0) as count_unique_opens,\n        coalesce(email_stats.count_unique_clicks, 0) as count_unique_clicks\n    from leads\n    left join email_stats\n        using (lead_id)\n)\n\nselect *\nfrom joined", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`marketo__leads`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.993025Z", "completed_at": "2024-02-29T15:48:17.996031Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:17.996497Z", "completed_at": "2024-02-29T15:48:17.996501Z"}], "thread_id": "Thread-2", "execution_time": 0.004438877105712891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__leads_lead_id.4dd423c832", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_id\nfrom `dbt-package-testing`.`marketo_test_marketo`.`marketo__leads`\nwhere lead_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.998040Z", "completed_at": "2024-02-29T15:48:18.001798Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:18.002263Z", "completed_at": "2024-02-29T15:48:18.002266Z"}], "thread_id": "Thread-2", "execution_time": 0.005213022232055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__leads_lead_id.1ac49a9fda", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select lead_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo`.`marketo__leads`\n  where lead_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:15.035908Z", "completed_at": "2024-02-29T15:48:18.405772Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:18.407319Z", "completed_at": "2024-02-29T15:48:18.407340Z"}], "thread_id": "Thread-1", "execution_time": 3.376713275909424, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__calendar_spine", "compiled": true, "compiled_code": "with spine as (\n\n    \n    \n\n    -- can set first date with var marketo__first_date; \n    -- default first date is the minimum date of stg_marketo__lead\n    \n    \n        \n            \n\n        \n\n    \n\n\n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1530\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n        datetime_add(\n            cast( '2019-12-29' as datetime),\n        interval row_number() over (order by 1) - 1 day\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= \n\n        datetime_add(\n            cast( current_date as datetime),\n        interval 1 week\n        )\n\n\n\n)\n\nselect * from filtered\n\n\n\n), recast as (\n    select cast(date_day as date) as date_day\n    from spine\n)\n\nselect *\nfrom recast", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`marketo__calendar_spine`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:18.411931Z", "completed_at": "2024-02-29T15:48:18.425649Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:18.426547Z", "completed_at": "2024-02-29T15:48:18.426557Z"}], "thread_id": "Thread-2", "execution_time": 0.016955852508544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__lead_calendar_spine", "compiled": true, "compiled_code": "\n\nwith calendar as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__calendar_spine`\n    \n    where date_day >= (select max(date_day) from `dbt-package-testing`.`marketo_test_marketo`.`marketo__lead_calendar_spine`)\n    \n\n), leads as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`int_marketo__lead`\n    \n), joined as (\n\n    select \n        calendar.date_day,\n        leads.lead_id\n    from calendar\n    inner join leads\n        on calendar.date_day >= cast(leads.created_timestamp as date)\n\n), surrogate_key as (\n\n    select\n        *,\n        to_hex(md5(cast(coalesce(cast(date_day as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') as string))) as lead_day_id\n    from joined\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`marketo__lead_calendar_spine`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.531217Z", "completed_at": "2024-02-29T15:48:19.378415Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:19.379589Z", "completed_at": "2024-02-29T15:48:19.379607Z"}], "thread_id": "Thread-4", "execution_time": 1.8499431610107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__change_data_details", "compiled": true, "compiled_code": "\n\n\n    \nwith change_data as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_change_data_value`\n    \n    where cast(\n\n        datetime_add(\n            cast( activity_timestamp as datetime),\n        interval -1 day\n        )\n\n as date) >= (select max(date_day) from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_details`)\n    \n\n), lead_describe as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead_describe`\n\n), joined as ( \n\n    -- Join the column names from the describe table onto the change data table\n\n    select \n        change_data.*,\n        lead_describe.rest_name_xf as primary_attribute_column\n    from change_data\n    left join lead_describe\n        on change_data.primary_attribute_value_id = lead_describe.lead_describe_id\n\n), pivots as (\n\n    -- For each column that is in both the lead_history_columns variable and the restname of the lead_describe table,\n    -- find whether a change occurred for a given column on a given day for a given lead. \n    -- This will feed the daily slowly changing dimension model.\n\n    select \n        lead_id,\n        cast(\n\n        datetime_add(\n            cast( activity_timestamp as datetime),\n        interval -1 day\n        )\n\n as date) as date_day\n\n        \n        \n        , cast( max(case when lower(primary_attribute_column) = 'urgency' then 1 else 0 end) as boolean) as urgency\n        \n        \n        , cast( max(case when lower(primary_attribute_column) = 'relative_urgency' then 1 else 0 end) as boolean) as relative_urgency\n        \n        \n        , cast( max(case when lower(primary_attribute_column) = 'priority' then 1 else 0 end) as boolean) as priority\n        \n        \n        , cast( max(case when lower(primary_attribute_column) = 'relative_score' then 1 else 0 end) as boolean) as relative_score\n        \n        \n        , cast( max(case when lower(primary_attribute_column) = 'lead_status' then 1 else 0 end) as boolean) as lead_status\n        \n    \n    from joined\n    where cast(activity_timestamp as date) < current_date\n    group by 1,2\n\n), surrogate_key as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date_day as string), '_dbt_utils_surrogate_key_null_') as string))) as lead_day_id\n    from pivots\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_details`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:19.391332Z", "completed_at": "2024-02-29T15:48:19.396336Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:19.397976Z", "completed_at": "2024-02-29T15:48:19.397983Z"}], "thread_id": "Thread-2", "execution_time": 0.015498876571655273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__change_data_details_lead_day_id.9ede3f08c4", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select lead_day_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_details`\n  where lead_day_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:19.385198Z", "completed_at": "2024-02-29T15:48:19.396758Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:19.398391Z", "completed_at": "2024-02-29T15:48:19.398396Z"}], "thread_id": "Thread-1", "execution_time": 0.017101049423217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__change_data_details_lead_day_id.f2b4e99285", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_day_id\nfrom `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_details`\nwhere lead_day_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:17.540558Z", "completed_at": "2024-02-29T15:48:19.484648Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:19.485661Z", "completed_at": "2024-02-29T15:48:19.485670Z"}], "thread_id": "Thread-3", "execution_time": 1.9467098712921143, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__change_data_pivot", "compiled": true, "compiled_code": "\n\n\n    \nwith change_data as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__activity_change_data_value`\n    \n    where cast(\n\n        datetime_add(\n            cast( activity_timestamp as datetime),\n        interval -1 day\n        )\n\n as date) >= (select max(date_day) from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_pivot`)\n    \n\n), lead_describe as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo_source`.`stg_marketo__lead_describe`\n\n), joined as (\n\n    -- Join the column names from the describe table onto the change data table\n\n    select \n        change_data.*,\n        lead_describe.rest_name_xf as primary_attribute_column\n    from change_data\n    left join lead_describe\n        on change_data.primary_attribute_value_id = lead_describe.lead_describe_id\n\n), event_order as (\n\n    select \n        *,\n        row_number() over (\n            partition by cast(activity_timestamp as date), lead_id, primary_attribute_value_id\n            order by activity_timestamp asc\n            ) as row_num\n    from joined\n\n), filtered as (\n\n    -- Find the first event that occurs on each day for each lead\n\n    select *\n    from event_order\n    where row_num = 1\n\n), pivots as (\n\n    -- For each column that is in both the lead_history_columns variable and the restname of the lead_describe table,\n    -- pivot out the value into it's own column. This will feed the daily slowly changing dimension model.\n\n    select \n        lead_id,\n        cast(\n\n        datetime_add(\n            cast( activity_timestamp as datetime),\n        interval -1 day\n        )\n\n as date) as date_day\n\n        \n        \n        , min(case when lower(primary_attribute_column) = 'urgency' then old_value end) as urgency\n        \n        \n        , min(case when lower(primary_attribute_column) = 'relative_urgency' then old_value end) as relative_urgency\n        \n        \n        , min(case when lower(primary_attribute_column) = 'priority' then old_value end) as priority\n        \n        \n        , min(case when lower(primary_attribute_column) = 'relative_score' then old_value end) as relative_score\n        \n        \n        , min(case when lower(primary_attribute_column) = 'lead_status' then old_value end) as lead_status\n        \n    \n    from filtered\n    where cast(activity_timestamp as date) < current_date\n    group by 1,2\n\n), surrogate_key as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date_day as string), '_dbt_utils_surrogate_key_null_') as string))) as lead_day_id\n    from pivots\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_pivot`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:19.508662Z", "completed_at": "2024-02-29T15:48:19.513740Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:19.515070Z", "completed_at": "2024-02-29T15:48:19.515076Z"}], "thread_id": "Thread-1", "execution_time": 0.02532792091369629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__change_data_pivot_lead_day_id.19c42a1a1b", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select lead_day_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_pivot`\n  where lead_day_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:19.504650Z", "completed_at": "2024-02-29T15:48:19.514107Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:19.515432Z", "completed_at": "2024-02-29T15:48:19.515436Z"}], "thread_id": "Thread-2", "execution_time": 0.027022123336791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__change_data_pivot_lead_day_id.100210c0d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_day_id\nfrom `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_pivot`\nwhere lead_day_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:19.491773Z", "completed_at": "2024-02-29T15:48:21.240893Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:21.242023Z", "completed_at": "2024-02-29T15:48:21.242041Z"}], "thread_id": "Thread-4", "execution_time": 1.7545599937438965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__change_data_scd", "compiled": true, "compiled_code": "\n    \nwith change_data as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_pivot`\n    \n    where date_day >= (select max(valid_to) from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_scd`)\n    \n\n), leads as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`int_marketo__lead`\n\n), details as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_details`\n    \n    where date_day >= (select max(valid_to) from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_scd`)\n    \n\n), unioned as (\n\n    -- unions together the current state of leads and their history changes. \n    -- we need the current state to work backwards from to backfill the slowly changing dimension model\n\n    \n\n        (\n            select\n\n                cast('`dbt-package-testing`.`marketo_test_marketo`.`int_marketo__lead`' as string) as _dbt_source_relation,\n                \n                    cast(`_fivetran_synced` as TIMESTAMP) as `_fivetran_synced` ,\n                    cast(`created_timestamp` as TIMESTAMP) as `created_timestamp` ,\n                    cast(`email` as STRING) as `email` ,\n                    cast(`first_name` as STRING) as `first_name` ,\n                    cast(`lead_id` as INT64) as `lead_id` ,\n                    cast(`last_name` as STRING) as `last_name` ,\n                    cast(`updated_timestamp` as STRING) as `updated_timestamp` ,\n                    cast(`phone` as STRING) as `phone` ,\n                    cast(`main_phone` as STRING) as `main_phone` ,\n                    cast(`mobile_phone` as STRING) as `mobile_phone` ,\n                    cast(`company` as STRING) as `company` ,\n                    cast(`inferred_company` as STRING) as `inferred_company` ,\n                    cast(`address_lead` as STRING) as `address_lead` ,\n                    cast(`address` as STRING) as `address` ,\n                    cast(`city` as STRING) as `city` ,\n                    cast(`state` as STRING) as `state` ,\n                    cast(`state_code` as STRING) as `state_code` ,\n                    cast(`country` as STRING) as `country` ,\n                    cast(`country_code` as STRING) as `country_code` ,\n                    cast(`postal_code` as STRING) as `postal_code` ,\n                    cast(`billing_street` as STRING) as `billing_street` ,\n                    cast(`billing_city` as STRING) as `billing_city` ,\n                    cast(`billing_state` as STRING) as `billing_state` ,\n                    cast(`billing_state_code` as STRING) as `billing_state_code` ,\n                    cast(`billing_country` as STRING) as `billing_country` ,\n                    cast(`billing_country_code` as STRING) as `billing_country_code` ,\n                    cast(`billing_postal_code` as STRING) as `billing_postal_code` ,\n                    cast(`inferred_city` as STRING) as `inferred_city` ,\n                    cast(`inferred_state_region` as STRING) as `inferred_state_region` ,\n                    cast(`inferred_country` as STRING) as `inferred_country` ,\n                    cast(`inferred_postal_code` as STRING) as `inferred_postal_code` ,\n                    cast(`inferred_phone_area_code` as STRING) as `inferred_phone_area_code` ,\n                    cast(`anonymous_ip` as STRING) as `anonymous_ip` ,\n                    cast(`is_unsubscribed` as BOOLEAN) as `is_unsubscribed` ,\n                    cast(`is_email_invalid` as BOOLEAN) as `is_email_invalid` ,\n                    cast(`do_not_call` as BOOLEAN) as `do_not_call` ,\n                    cast(`is_deleted` as BOOLEAN) as `is_deleted` ,\n                    cast(`merged_into_lead_id` as STRING) as `merged_into_lead_id` ,\n                    cast(`is_merged` as BOOLEAN) as `is_merged` ,\n                    cast(null as DATE) as `date_day` ,\n                    cast(null as STRING) as `urgency` ,\n                    cast(null as STRING) as `relative_urgency` ,\n                    cast(null as STRING) as `priority` ,\n                    cast(null as STRING) as `relative_score` ,\n                    cast(null as STRING) as `lead_status` ,\n                    cast(null as STRING) as `lead_day_id` \n\n            from leads\n        )\n\n        union all\n        \n\n        (\n            select\n\n                cast('`dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_pivot`' as string) as _dbt_source_relation,\n                \n                    cast(null as TIMESTAMP) as `_fivetran_synced` ,\n                    cast(null as TIMESTAMP) as `created_timestamp` ,\n                    cast(null as STRING) as `email` ,\n                    cast(null as STRING) as `first_name` ,\n                    cast(`lead_id` as INT64) as `lead_id` ,\n                    cast(null as STRING) as `last_name` ,\n                    cast(null as STRING) as `updated_timestamp` ,\n                    cast(null as STRING) as `phone` ,\n                    cast(null as STRING) as `main_phone` ,\n                    cast(null as STRING) as `mobile_phone` ,\n                    cast(null as STRING) as `company` ,\n                    cast(null as STRING) as `inferred_company` ,\n                    cast(null as STRING) as `address_lead` ,\n                    cast(null as STRING) as `address` ,\n                    cast(null as STRING) as `city` ,\n                    cast(null as STRING) as `state` ,\n                    cast(null as STRING) as `state_code` ,\n                    cast(null as STRING) as `country` ,\n                    cast(null as STRING) as `country_code` ,\n                    cast(null as STRING) as `postal_code` ,\n                    cast(null as STRING) as `billing_street` ,\n                    cast(null as STRING) as `billing_city` ,\n                    cast(null as STRING) as `billing_state` ,\n                    cast(null as STRING) as `billing_state_code` ,\n                    cast(null as STRING) as `billing_country` ,\n                    cast(null as STRING) as `billing_country_code` ,\n                    cast(null as STRING) as `billing_postal_code` ,\n                    cast(null as STRING) as `inferred_city` ,\n                    cast(null as STRING) as `inferred_state_region` ,\n                    cast(null as STRING) as `inferred_country` ,\n                    cast(null as STRING) as `inferred_postal_code` ,\n                    cast(null as STRING) as `inferred_phone_area_code` ,\n                    cast(null as STRING) as `anonymous_ip` ,\n                    cast(null as BOOLEAN) as `is_unsubscribed` ,\n                    cast(null as BOOLEAN) as `is_email_invalid` ,\n                    cast(null as BOOLEAN) as `do_not_call` ,\n                    cast(null as BOOLEAN) as `is_deleted` ,\n                    cast(null as STRING) as `merged_into_lead_id` ,\n                    cast(null as BOOLEAN) as `is_merged` ,\n                    cast(`date_day` as DATE) as `date_day` ,\n                    cast(`urgency` as STRING) as `urgency` ,\n                    cast(`relative_urgency` as STRING) as `relative_urgency` ,\n                    cast(`priority` as STRING) as `priority` ,\n                    cast(`relative_score` as STRING) as `relative_score` ,\n                    cast(`lead_status` as STRING) as `lead_status` ,\n                    cast(`lead_day_id` as STRING) as `lead_day_id` \n\n            from change_data\n        )\n\n        \n\n), today as (\n\n    -- For each day where a change occurred for each lead, we backfill the values from the subsequent change, \n    -- going back in time. In order to account for changes that occur to or from null values, we need to do a coalesce\n    -- with dummy values, which we nullif() at the end.\n    -- The 'details' table is joined in for exactly this purpose. It tells us, even if a value is null, whether that null\n    -- value is because no change occurred on that day, or because there was a change and the change involved the null value.\n\n    select \n        coalesce(unioned.date_day, current_date) as valid_to, \n        unioned.lead_id\n        \n\n    from unioned\n    left join details\n        on unioned.date_day = details.date_day\n        and unioned.lead_id = details.lead_id\n\n), surrogate_key as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(valid_to as string), '_dbt_utils_surrogate_key_null_') as string))) as lead_day_id\n    from today\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_scd`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:21.259118Z", "completed_at": "2024-02-29T15:48:21.269557Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:21.271047Z", "completed_at": "2024-02-29T15:48:21.271053Z"}], "thread_id": "Thread-1", "execution_time": 0.02534008026123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__change_data_scd_lead_day_id.cead02fb2e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_day_id\nfrom `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_scd`\nwhere lead_day_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:21.263280Z", "completed_at": "2024-02-29T15:48:21.269945Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:21.271379Z", "completed_at": "2024-02-29T15:48:21.271383Z"}], "thread_id": "Thread-2", "execution_time": 0.02535390853881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__change_data_scd_lead_day_id.4341b31771", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select lead_day_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_scd`\n  where lead_day_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:21.249183Z", "completed_at": "2024-02-29T15:48:21.819556Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:21.820552Z", "completed_at": "2024-02-29T15:48:21.820570Z"}], "thread_id": "Thread-3", "execution_time": 0.5756468772888184, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.marketo.marketo__lead_history", "compiled": true, "compiled_code": "with change_data as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__change_data_scd`\n    \n    where valid_to >= (select max(date_day) from `dbt-package-testing`.`marketo_test_marketo`.`marketo__lead_history`)\n    \n\n), calendar as (\n\n    select *\n    from `dbt-package-testing`.`marketo_test_marketo`.`marketo__lead_calendar_spine`\n    where date_day <= current_date\n    \n    and date_day >= (select max(date_day) from `dbt-package-testing`.`marketo_test_marketo`.`marketo__lead_history`)\n    \n\n), joined as (\n\n    select \n        calendar.date_day,\n        calendar.lead_id,\n        change_data.lead_id is not null as new_values_present\n        \n    from calendar\n    left join change_data\n        on calendar.lead_id = change_data.lead_id\n        and calendar.date_day = change_data.valid_to\n\n), backfill as (\n\n    select\n        date_day,\n        lead_id    \n        -- For each lead on each day, find the state of each column from the next record where a change occurred,\n        -- identified by the presence of a record from the SCD table on that day\n        \n    from joined\n\n), surrogate_key as (\n\n    select \n        *,\n        to_hex(md5(cast(coalesce(cast(date_day as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lead_id as string), '_dbt_utils_surrogate_key_null_') as string))) as lead_history_id\n    from backfill\n\n)\n\nselect *\nfrom surrogate_key", "relation_name": "`dbt-package-testing`.`marketo_test_marketo`.`marketo__lead_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:21.825668Z", "completed_at": "2024-02-29T15:48:21.841191Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:21.841827Z", "completed_at": "2024-02-29T15:48:21.841833Z"}], "thread_id": "Thread-4", "execution_time": 0.019150257110595703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__lead_history_lead_history_id.f9f0bece9c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_history_id\nfrom `dbt-package-testing`.`marketo_test_marketo`.`marketo__lead_history`\nwhere lead_history_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:21.837056Z", "completed_at": "2024-02-29T15:48:21.842924Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:21.844168Z", "completed_at": "2024-02-29T15:48:21.844172Z"}], "thread_id": "Thread-2", "execution_time": 0.013441085815429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.unique_marketo__lead_history_lead_history_id.f3c93a4f33", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select lead_history_id as unique_field\n  from `dbt-package-testing`.`marketo_test_marketo`.`marketo__lead_history`\n  where lead_history_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T15:48:21.832875Z", "completed_at": "2024-02-29T15:48:21.843259Z"}, {"name": "execute", "started_at": "2024-02-29T15:48:21.844484Z", "completed_at": "2024-02-29T15:48:21.844488Z"}], "thread_id": "Thread-1", "execution_time": 0.0206298828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.marketo.not_null_marketo__lead_history_lead_id.775a15195a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_id\nfrom `dbt-package-testing`.`marketo_test_marketo`.`marketo__lead_history`\nwhere lead_id is null\n\n\n", "relation_name": null}], "elapsed_time": 8.062998056411743, "args": {"indirect_selection": "eager", "which": "generate", "log_path": "/Users/jamie.rodriguez/Desktop/dbt_repos/Marketing/Marketo/dbt_marketo/integration_tests/logs", "quiet": false, "log_level": "info", "enable_legacy_logger": false, "log_level_file": "debug", "use_colors": true, "cache_selected_only": false, "partial_parse": true, "static": false, "profiles_dir": "/Users/jamie.rodriguez/.dbt", "empty_catalog": false, "select": [], "warn_error_options": {"include": [], "exclude": []}, "macro_debugging": false, "use_colors_file": true, "vars": {}, "defer": false, "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "compile": true, "exclude": [], "invocation_command": "dbt docs generate", "printer_width": 80, "version_check": true, "strict_mode": false, "log_format": "default", "print": true, "project_dir": "/Users/jamie.rodriguez/Desktop/dbt_repos/Marketing/Marketo/dbt_marketo/integration_tests", "show_resource_report": false, "log_format_file": "debug", "favor_state": false, "populate_cache": true, "send_anonymous_usage_stats": true, "write_json": true, "static_parser": true, "introspect": true}}